[
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/BaseStyles.tsx",
    "description": "",
    "name": "BaseStyles",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "whiteSpace",
        "type": "\"pre\" | \"normal\" | \"nowrap\" | \"pre-wrap\" | \"pre-line\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Caret.tsx",
    "description": "",
    "name": "Caret",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "bg",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "borderColor",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "borderWidth",
        "type": "string | number",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "number",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "location",
        "type": "Location",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "theme",
        "type": "Theme",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog.tsx",
    "id": "dialog",
    "description": "Dialog is a floating surface used to display transient content such as confirmation actions, selection options, and more.",
    "docsId": "dialog",
    "name": "Dialog",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "narrow",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "wide",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "onDismiss",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": "() => null"
      },
      {
        "name": "isOpen",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "initialFocusRef",
        "type": "React.RefObject<HTMLElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "returnFocusRef",
        "type": "React.RefObject<HTMLElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Placeholder.tsx",
    "description": "Private component used to render placeholders in storybook and documentation examples",
    "name": "Placeholder",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "string | number",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "height",
        "type": "string | number",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "label",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Select.tsx",
    "description": "",
    "name": "Select",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is styled to look disabled.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "TextInputSizes",
        "required": false,
        "description": "The size of the input.",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Whether the input takes up the full width of its parent",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": false,
        "description": "Whether the text rendered in the input is in a monospace font.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": "{}"
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "Whether the background color of the input has contrast against the default background color.",
        "defaultValue": null
      },
      {
        "name": "hasTrailingAction",
        "type": "boolean",
        "required": false,
        "description": "Whether the input has a trailing action.",
        "defaultValue": null
      },
      {
        "name": "isInputFocused",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is focused.",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "The result of validation on the input.",
        "defaultValue": null
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SideNav.tsx",
    "description": "",
    "name": "SideNav.Link",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "aria-label",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"normal\" | \"lightweight\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "bordered",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ThemeProvider.tsx",
    "description": "",
    "name": "ThemeProvider",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "theme",
        "type": "Theme",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "colorMode",
        "type": "ColorModeWithAuto",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "dayScheme",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "nightScheme",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "preventSSRMismatch",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/_VisuallyHidden.tsx",
    "description": "",
    "name": "VisuallyHidden",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "isVisible",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionBar/ActionBar.tsx",
    "id": "actionbar",
    "description": "Action bar contains a collection of horizontally aligned buttons.",
    "name": "ActionBar",
    "status": "alpha",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "Size",
        "required": false,
        "description": "Size of the action bar",
        "defaultValue": null
      },
      {
        "name": "children",
        "type": "any",
        "required": false,
        "description": "Buttons in the action bar",
        "defaultValue": null
      },
      {
        "name": "aria-label",
        "type": "any",
        "required": false,
        "description": "When provided, a label is added to the action bar",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "any",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionBar/ActionBar.tsx",
    "description": "",
    "name": "ActionBarIconButton",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-label",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Items that are disabled can not be clicked, selected, or navigated through.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "Size",
        "required": false,
        "description": "Size of button and fontSize of text in button",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Allow button width to fill its container.",
        "defaultValue": null
      },
      {
        "name": "icon",
        "type": "React.ElementType",
        "required": true,
        "description": "Provide an octicon. It will be placed in the center of the button",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "inactive",
        "type": "boolean",
        "required": false,
        "description": "Whether the button looks visually disabled, but can still accept all the same\ninteractions as an enabled button.",
        "defaultValue": null
      },
      {
        "name": "labelWrap",
        "type": "boolean",
        "required": false,
        "description": "Whether the button label should wrap to multiple lines of it is longer than the button width.",
        "defaultValue": null
      },
      {
        "name": "description",
        "type": "string",
        "required": false,
        "description": "If `description` is provided, we will use a Tooltip to describe the button. Then `aria-label` is used to label the button.",
        "defaultValue": null
      },
      {
        "name": "tooltipDirection",
        "type": "TooltipDirection",
        "required": false,
        "description": "Sets where the tooltip renders in relation to the target.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/List.tsx",
    "id": "action_list",
    "description": "Action list is a vertical list of interactive actions or options. It's composed of items presented in a consistent, single-column format, with room for icons, descriptions, side information, and other rich visuals.",
    "name": "ActionList",
    "status": "beta",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "keyof IntrinsicElements",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Description.tsx",
        "description": "Secondary text which provides additional information about an `Item`",
        "name": "ActionList.Description",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "\"block\" | \"inline\"",
            "required": false,
            "description": "Secondary text style variations.\n\n- `\"inline\"` - Secondary text is positioned beside primary text.\n- `\"block\"` - Secondary text is positioned below primary text.",
            "defaultValue": "inline"
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Divider.tsx",
        "description": "Visually separates `Item`s or `Group`s in an `ActionList`.",
        "name": "ActionList.Divider",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Group.tsx",
        "description": "Collects related `Items` in an `ActionList`.",
        "name": "ActionList.Group",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "\"subtle\" | \"filled\"",
            "required": false,
            "description": "Style variations. Usage is discretionary.\n\n- `\"filled\"` - Superimposed on a background, offset from nearby content\n- `\"subtle\"` - Relatively less offset from nearby content",
            "defaultValue": "subtle"
          },
          {
            "name": "title",
            "type": "string",
            "required": false,
            "description": "@deprecated (Use `ActionList.GroupHeading` instead. i.e. <ActionList.Group title=\"Group title\"> → <ActionList.GroupHeading>Group title</ActionList.GroupHeading>)",
            "defaultValue": null
          },
          {
            "name": "auxiliaryText",
            "type": "string",
            "required": false,
            "description": "Secondary text which provides additional information about a `Group`.",
            "defaultValue": null
          },
          {
            "name": "role",
            "type": "AriaRole",
            "required": false,
            "description": "The ARIA role describing the function of the list inside `Group` component. `listbox` or `menu` are a common values.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "__DEV__\n  ? Object.freeze<BetterSystemStyleObject>({})\n  : {}"
          },
          {
            "name": "selectionVariant",
            "type": "any",
            "required": false,
            "description": "Whether multiple Items or a single Item can be selected in the Group. Overrides value on ActionList root.",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Group.tsx",
        "description": "Heading of  a `Group`.\n\nAs default, the role of ActionList is \"list\" and therefore group heading is rendered as a proper heading tag.\nIf the role is \"listbox\" or \"menu\" (ActionMenu), the group heading is rendered as a div with presentation role and it is\nhidden from the accessibility tree due to the limitation of listbox children. https://w3c.github.io/aria/#listbox\ngroups under menu or listbox are labelled by `aria-label`",
        "name": "ActionList.GroupHeading",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "\"subtle\" | \"filled\"",
            "required": false,
            "description": "Style variations. Usage is discretionary.\n\n- `\"filled\"` - Superimposed on a background, offset from nearby content\n- `\"subtle\"` - Relatively less offset from nearby content",
            "defaultValue": "subtle"
          },
          {
            "name": "auxiliaryText",
            "type": "string",
            "required": false,
            "description": "Secondary text which provides additional information about a `Group`.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "__DEV__\n  ? Object.freeze<BetterSystemStyleObject>({})\n  : {}"
          },
          {
            "name": "visuallyHidden",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "_internalBackwardCompatibleTitle",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Heading.tsx",
        "description": "Heading for an `ActionList`",
        "name": "ActionList.Heading",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 166 more ... | (\"h6\" & (ComponentClass<...> | FunctionComponent<...>))",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Item.tsx",
        "description": "An actionable or selectable `Item`",
        "name": "ActionList.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/LinkItem.tsx",
        "description": "A `Item` that renders a full-size anchor inside ListItem",
        "name": "ActionList.LinkItem",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Visuals.tsx",
        "description": "Icon (or similar) positioned before `Item` text",
        "name": "ActionList.LeadingVisual",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Visuals.tsx",
        "description": "Icon (or similar) positioned after `Item` text",
        "name": "ActionList.TrailingVisual",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Selection.tsx",
    "description": "",
    "name": "Selection",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "selected",
        "type": "boolean",
        "required": false,
        "description": "Is the `Item` is currently selected?",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/TrailingAction.tsx",
    "description": "",
    "name": "ActionList.TrailingAction",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | (\"a\" & (ComponentClass<...> | FunctionComponent<...>))",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionList/Visuals.tsx",
    "description": "",
    "name": "LeadingVisualContainer",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": "{}"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionMenu/ActionMenu.tsx",
    "id": "action_menu",
    "description": "Action menu is composed of action list and overlay patterns used for quick actions and selections.\nDefaults to a the \"default\" Button variant with a trailing down triangle icon.",
    "name": "ActionMenu",
    "status": "beta",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "children",
        "type": "any",
        "required": false,
        "description": "Recommended: `ActionMenu.Button` or `ActionMenu.Anchor` with `ActionMenu.Overlay`",
        "defaultValue": null
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "If defined, will control the open/closed state of the overlay. Must be used in conjunction with `onOpenChange`.",
        "defaultValue": null
      },
      {
        "name": "onOpenChange",
        "type": "(s: boolean) => void",
        "required": false,
        "description": "If defined, will control the open/closed state of the overlay. Must be used in conjunction with `open`.",
        "defaultValue": null
      },
      {
        "name": "anchorRef",
        "type": "any",
        "required": false,
        "description": "An override to the internal ref that will be spread on to the renderAnchor\nAn override to the internal renderAnchor ref that will be used to position the overlay.\nWhen renderAnchor is null this can be used to make an anchor that is detached from ActionMenu.",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionMenu/ActionMenu.tsx",
        "description": "Container for a custom anchor element that triggers the ActionMenu. Commonly used to wrap an IconButton.",
        "name": "ActionMenu.Anchor",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionMenu/ActionMenu.tsx",
        "description": "The button that toggles the ActionMenu",
        "name": "ActionMenu.Button",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ActionMenu/ActionMenu.tsx",
        "description": "The non-modal dialog that overlays the UI",
        "name": "ActionMenu.Overlay",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "style",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "height",
            "type": "\"small\" | \"initial\" | \"large\" | \"medium\" | \"auto\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "width",
            "type": "\"small\" | \"large\" | \"medium\" | \"auto\" | \"xlarge\" | \"xxlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "overflow",
            "type": "\"hidden\" | \"scroll\" | \"auto\" | \"visible\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "maxHeight",
            "type": "\"small\" | \"large\" | \"medium\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "maxWidth",
            "type": "\"small\" | \"large\" | \"medium\" | \"xlarge\" | \"xxlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "anchorSide",
            "type": "AnchorSide",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "ignoreClickRefs",
            "type": "React.RefObject<HTMLElement>[]",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "initialFocusRef",
            "type": "React.RefObject<HTMLElement>",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "returnFocusRef",
            "type": "React.RefObject<HTMLElement>",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "onClickOutside",
            "type": "(e: TouchOrMouseEvent) => void",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "onEscape",
            "type": "(e: KeyboardEvent) => void",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "visibility",
            "type": "\"hidden\" | \"visible\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "data-test-id",
            "type": "unknown",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "position",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "top",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "left",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "right",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "bottom",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "portalContainerName",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "preventFocusOnOpen",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "role",
            "type": "AriaRole",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "children",
            "type": "any",
            "required": false,
            "description": "Recommended: `ActionList`",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"div\"",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/AnchoredOverlay/AnchoredOverlay.tsx",
    "id": "anchored_overlay",
    "description": "An `AnchoredOverlay` provides an anchor that will open a floating overlay positioned relative to the anchor.\nThe overlay can be opened and navigated using keyboard or mouse.",
    "name": "AnchoredOverlay",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "open",
        "type": "boolean",
        "required": true,
        "description": "Determines whether the overlay portion of the component should be shown or not",
        "defaultValue": null
      },
      {
        "name": "onOpen",
        "type": "(gesture: \"anchor-click\" | \"anchor-key-press\", event?: React.KeyboardEvent<HTMLElement>) => unknown",
        "required": false,
        "description": "A callback which is called whenever the overlay is currently closed and an \"open gesture\" is detected.",
        "defaultValue": null
      },
      {
        "name": "onClose",
        "type": "(gesture: \"anchor-click\" | \"click-outside\" | \"escape\") => unknown",
        "required": false,
        "description": "A callback which is called whenever the overlay is currently open and a \"close gesture\" is detected.",
        "defaultValue": null
      },
      {
        "name": "overlayProps",
        "type": "Partial<Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"ref\"> & { ...; }, \"style\" | ... 8 more ... | keyof BaseOverlayProps> & Omit<...> & BaseOverlayProps & { ...; }>",
        "required": false,
        "description": "Props to be spread on the internal `Overlay` component.",
        "defaultValue": null
      },
      {
        "name": "focusTrapSettings",
        "type": "Partial<FocusTrapHookSettings>",
        "required": false,
        "description": "Settings to apply to the Focus Zone on the internal `Overlay` component.",
        "defaultValue": null
      },
      {
        "name": "focusZoneSettings",
        "type": "Partial<FocusZoneHookSettings>",
        "required": false,
        "description": "Settings to apply to the Focus Zone on the internal `Overlay` component.",
        "defaultValue": null
      },
      {
        "name": "height",
        "type": "\"small\" | \"initial\" | \"large\" | \"medium\" | \"auto\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "\"small\" | \"large\" | \"medium\" | \"auto\" | \"xlarge\" | \"xxlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "renderAnchor",
        "type": "<T extends React.HTMLAttributes<HTMLElement>>(props: T) => Element",
        "required": true,
        "description": "A custom function component used to render the anchor element.\nWill receive the selected text as `children` prop when an item is activated.\nA custom function component used to render the anchor element.\nWhen renderAnchor is null, an anchorRef is required.",
        "defaultValue": null
      },
      {
        "name": "anchorRef",
        "type": "any",
        "required": false,
        "description": "An override to the internal ref that will be spread on to the renderAnchor\nAn override to the internal renderAnchor ref that will be used to position the overlay.\nWhen renderAnchor is null this can be used to make an anchor that is detached from ActionMenu.",
        "defaultValue": null
      },
      {
        "name": "anchorId",
        "type": "string",
        "required": false,
        "description": "An override to the internal id that will be spread on to the renderAnchor",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Autocomplete/Autocomplete.tsx",
    "id": "autocomplete",
    "description": "Autocomplete allows users to quickly filter through a list of options and pick one or more values for a field.",
    "name": "Autocomplete",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "May be used to customize how the ID is set on the text input to be used by ARIA attributes on related elements.",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Autocomplete/AutocompleteInput.tsx",
        "description": "The text input field for an Autocomplete component. Defaults to using a `TextInput` component, but is polymorphic to allow for custom components.",
        "name": "Autocomplete.Input",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "any",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Autocomplete/AutocompleteMenu.tsx",
        "description": "The dropdown menu with suggestions for an Autocomplete component.",
        "name": "Autocomplete.Menu",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "addNewItem",
            "type": "Omit<ActionListItemProps, \"id\"> & { id: string; } & { leadingVisual?: React.FunctionComponent<React.PropsWithChildren<IconProps>>; text?: string; trailingVisual?: React.FunctionComponent<React.PropsWithChildren<IconProps>>; } & { ...; } & { ...; }",
            "required": false,
            "description": "A menu item that is used to allow users make a selection that is not available in the array passed to the `items` prop.\nThis menu item gets appended to the end of the list of options.",
            "defaultValue": null
          },
          {
            "name": "emptyStateText",
            "type": "any",
            "required": false,
            "description": "The text that appears in the menu when there are no options in the array passed to the `items` prop.",
            "defaultValue": null
          },
          {
            "name": "filterFn",
            "type": "(item: T, i: number) => boolean",
            "required": false,
            "description": "A custom function used to filter the options in the array passed to the `items` prop.\nBy default, we filter out items that don't match the value of the autocomplete text input. The default filter is not case-sensitive.",
            "defaultValue": null
          },
          {
            "name": "items",
            "type": "T[]",
            "required": true,
            "description": "The options for field values that are displayed in the dropdown menu.\nOne or more may be selected depending on the value of the `selectionVariant` prop.",
            "defaultValue": null
          },
          {
            "name": "loading",
            "type": "boolean",
            "required": false,
            "description": "Whether the data is loaded for the menu items",
            "defaultValue": null
          },
          {
            "name": "selectedItemIds",
            "type": "string[]",
            "required": true,
            "description": "The IDs of the selected items",
            "defaultValue": null
          },
          {
            "name": "sortOnCloseFn",
            "type": "(itemIdA: string, itemIdB: string) => number",
            "required": false,
            "description": "The sort function that is applied to the options in the array passed to the `items` prop after the user closes the menu.\nBy default, selected items are sorted to the top after the user closes the menu.",
            "defaultValue": null
          },
          {
            "name": "selectionVariant",
            "type": "\"multiple\" | \"single\"",
            "required": false,
            "description": "Whether there can be one item selected from the menu or multiple items selected from the menu",
            "defaultValue": null
          },
          {
            "name": "onOpenChange",
            "type": "(open: boolean) => void",
            "required": false,
            "description": "Function that gets called when the menu is opened or closed",
            "defaultValue": null
          },
          {
            "name": "onSelectedChange",
            "type": "OnSelectedChange<T>",
            "required": false,
            "description": "The function that is called when an item in the list is selected or deselected",
            "defaultValue": null
          },
          {
            "name": "customScrollContainerRef",
            "type": "React.MutableRefObject<HTMLElement>",
            "required": false,
            "description": "If the menu is rendered in a scrolling element other than the `Autocomplete.Overlay` component,\npass the ref of that element to `customScrollContainerRef` to ensure the container automatically\nscrolls when the user highlights an item in the menu that is outside the scroll container",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "string",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Autocomplete/AutocompleteOverlay.tsx",
        "description": "A non-modal dialog container for the the dropdown menu with suggestions for an Autocomplete component.\nCan be excluded if you want the the Autocomplete suggestions to appear in the DOM flow.",
        "name": "Autocomplete.Overlay",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "menuAnchorRef",
            "type": "React.RefObject<HTMLElement>",
            "required": false,
            "description": "The ref of the element that the position of the menu is based on. By default, the menu is positioned based on the text input",
            "defaultValue": null
          },
          {
            "name": "overlayProps",
            "type": "Partial<Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"ref\"> & { ...; }, \"style\" | ... 8 more ... | keyof BaseOverlayProps> & Omit<...> & BaseOverlayProps & { ...; }>",
            "required": false,
            "description": "Props to be spread on the internal `Overlay` component.",
            "defaultValue": null
          },
          {
            "name": "style",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "height",
            "type": "\"small\" | \"initial\" | \"large\" | \"medium\" | \"auto\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "width",
            "type": "\"small\" | \"large\" | \"medium\" | \"auto\" | \"xlarge\" | \"xxlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "overflow",
            "type": "\"hidden\" | \"scroll\" | \"auto\" | \"visible\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "maxHeight",
            "type": "\"small\" | \"large\" | \"medium\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "maxWidth",
            "type": "\"small\" | \"large\" | \"medium\" | \"xlarge\" | \"xxlarge\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "anchorSide",
            "type": "AnchorSide",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "ignoreClickRefs",
            "type": "React.RefObject<HTMLElement>[]",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "initialFocusRef",
            "type": "React.RefObject<HTMLElement>",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "returnFocusRef",
            "type": "React.RefObject<HTMLElement>",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "onClickOutside",
            "type": "(e: TouchOrMouseEvent) => void",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "onEscape",
            "type": "(e: KeyboardEvent) => void",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "visibility",
            "type": "\"hidden\" | \"visible\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "data-test-id",
            "type": "unknown",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "position",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "top",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "left",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "right",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "bottom",
            "type": "React.CSSProperties",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "portalContainerName",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "preventFocusOnOpen",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "role",
            "type": "AriaRole",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"div\"",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Avatar/Avatar.tsx",
    "id": "avatar",
    "description": "Avatar is an image that represents a user or organization.",
    "name": "Avatar",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "alt",
        "type": "string",
        "required": false,
        "description": "Provide alt text when the Avatar is used without the user's name next to it.",
        "defaultValue": ""
      },
      {
        "name": "src",
        "type": "string",
        "required": false,
        "description": "URL of the avatar image.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "number | ResponsiveValue<number>",
        "required": false,
        "description": "Sets the width and height of the avatar.",
        "defaultValue": 20
      },
      {
        "name": "square",
        "type": "boolean",
        "required": false,
        "description": "Sets the shape of the avatar to a square if true. If false, the avatar will be circular.",
        "defaultValue": false
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/AvatarPair/AvatarPair.tsx",
    "id": "avatar_pair",
    "description": "AvatarPair is composed of two avatars, one larger one and a smaller one, overlaid slightly.",
    "name": "AvatarPair",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/AvatarStack/AvatarStack.tsx",
    "id": "avatar_stack",
    "description": "Avatar stack displays two or more avatars in an inline stack.",
    "name": "AvatarStack",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "alignRight",
        "type": "boolean",
        "required": false,
        "description": "Align the avatars to the right",
        "defaultValue": null
      },
      {
        "name": "disableExpand",
        "type": "boolean",
        "required": false,
        "description": "Do not spread the avatars on hover",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "number | ResponsiveValue<number>",
        "required": false,
        "description": "The size of the avatar children in pixels",
        "defaultValue": null
      },
      {
        "name": "children",
        "type": "React.ReactNode",
        "required": true,
        "description": "A set of Avatar components to stack",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Banner/Banner.tsx",
    "description": "",
    "name": "BannerActions",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "primaryAction",
        "type": "ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "secondaryAction",
        "type": "ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Banner/Banner.tsx",
    "id": "banner",
    "description": "Banner is used to highlight important information.",
    "name": "Banner",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "title",
        "type": "string & ReactNode",
        "required": false,
        "description": "The title for the Banner. This will be used as the accessible name and is\nrequired unless `Banner.Title` is used as a child.",
        "defaultValue": null
      },
      {
        "name": "aria-label",
        "type": "string",
        "required": false,
        "description": "Defines a string value that labels the current element.\nProvide an optional label to override the default name for the Banner\nlandmark region\n@see aria-labelledby.",
        "defaultValue": null
      },
      {
        "name": "description",
        "type": "ReactNode",
        "required": false,
        "description": "Provide an optional description for the Banner. This should provide\nsupplemental information about the Banner",
        "defaultValue": null
      },
      {
        "name": "hideTitle",
        "type": "boolean",
        "required": false,
        "description": "Specify whether the title of the Banner should be visible or not.",
        "defaultValue": null
      },
      {
        "name": "icon",
        "type": "ReactNode",
        "required": false,
        "description": "Provide an icon for the banner.\nNote: Only `variant=\"info\"` banners should use custom icons",
        "defaultValue": null
      },
      {
        "name": "onDismiss",
        "type": "() => void",
        "required": false,
        "description": "Optionally provide a handler to be called when the banner is dismissed.\nProviding this prop will show a dismiss button.\n\nNote: This is not available for critical banners.",
        "defaultValue": null
      },
      {
        "name": "primaryAction",
        "type": "ReactNode",
        "required": false,
        "description": "Provide an optional primary action for the Banner.",
        "defaultValue": null
      },
      {
        "name": "secondaryAction",
        "type": "ReactNode",
        "required": false,
        "description": "Provide an optional secondary action for the Banner",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "BannerVariant",
        "required": false,
        "description": "Specify the type of the Banner",
        "defaultValue": "info"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Banner/Banner.tsx",
        "description": "The title (heading) of the Banner. May be used instead of the `title` prop on Banner.",
        "name": "Banner.Title",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "HeadingElement",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Banner/Banner.tsx",
        "description": "An optional description for the Banner when the title needs supplemental information. May be used instead of the `description` prop on Banner.",
        "name": "Banner.Description",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) used for custom styling",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Banner/Banner.tsx",
        "description": "The primary action to take in response to the messaging in Banner. May be used instead of the `primaryAction` prop on Banner.",
        "name": "Banner.PrimaryAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "Items that are disabled can not be clicked, selected, or navigated through.",
            "defaultValue": null
          },
          {
            "name": "size",
            "type": "Size",
            "required": false,
            "description": "Size of button and fontSize of text in button",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"button\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "block",
            "type": "boolean",
            "required": false,
            "description": "Allow button width to fill its container.",
            "defaultValue": null
          },
          {
            "name": "alignContent",
            "type": "AlignContent",
            "required": false,
            "description": "Content alignment for when visuals are present",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "any",
            "required": false,
            "description": "The icon for the IconButton",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "inactive",
            "type": "boolean",
            "required": false,
            "description": "Whether the button looks visually disabled, but can still accept all the same\ninteractions as an enabled button.",
            "defaultValue": null
          },
          {
            "name": "labelWrap",
            "type": "boolean",
            "required": false,
            "description": "Whether the button label should wrap to multiple lines of it is longer than the button width.",
            "defaultValue": null
          },
          {
            "name": "leadingVisual",
            "type": "any",
            "required": false,
            "description": "The leading visual which comes before the button content",
            "defaultValue": null
          },
          {
            "name": "trailingVisual",
            "type": "any",
            "required": false,
            "description": "The trailing visual which comes after the button content",
            "defaultValue": null
          },
          {
            "name": "trailingAction",
            "type": "any",
            "required": false,
            "description": "Trailing action appears to the right of the trailing visual and is always locked to the end",
            "defaultValue": null
          },
          {
            "name": "count",
            "type": "number",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Banner/Banner.tsx",
        "description": "The secondary action to take in response to the messaging in Banner. May be used instead of the `secondaryAction` prop on Banner.",
        "name": "Banner.SecondaryAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "Items that are disabled can not be clicked, selected, or navigated through.",
            "defaultValue": null
          },
          {
            "name": "size",
            "type": "Size",
            "required": false,
            "description": "Size of button and fontSize of text in button",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"button\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "block",
            "type": "boolean",
            "required": false,
            "description": "Allow button width to fill its container.",
            "defaultValue": null
          },
          {
            "name": "alignContent",
            "type": "AlignContent",
            "required": false,
            "description": "Content alignment for when visuals are present",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "any",
            "required": false,
            "description": "The icon for the IconButton",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "inactive",
            "type": "boolean",
            "required": false,
            "description": "Whether the button looks visually disabled, but can still accept all the same\ninteractions as an enabled button.",
            "defaultValue": null
          },
          {
            "name": "labelWrap",
            "type": "boolean",
            "required": false,
            "description": "Whether the button label should wrap to multiple lines of it is longer than the button width.",
            "defaultValue": null
          },
          {
            "name": "leadingVisual",
            "type": "any",
            "required": false,
            "description": "The leading visual which comes before the button content",
            "defaultValue": null
          },
          {
            "name": "trailingVisual",
            "type": "any",
            "required": false,
            "description": "The trailing visual which comes after the button content",
            "defaultValue": null
          },
          {
            "name": "trailingAction",
            "type": "any",
            "required": false,
            "description": "Trailing action appears to the right of the trailing visual and is always locked to the end",
            "defaultValue": null
          },
          {
            "name": "count",
            "type": "number",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/Blankslate.tsx",
    "id": "blankslate",
    "description": "Blankslate is used as placeholder to tell users why content is missing.",
    "name": "Blankslate",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "border",
        "type": "boolean",
        "required": false,
        "description": "Add a border around this component",
        "defaultValue": null
      },
      {
        "name": "narrow",
        "type": "boolean",
        "required": false,
        "description": "Constrain the maximum width of this component",
        "defaultValue": null
      },
      {
        "name": "spacious",
        "type": "boolean",
        "required": false,
        "description": "Increase the padding of this component",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/Blankslate.tsx",
        "description": "Used to display an icon or image at the top of a Blankslate.",
        "name": "Blankslate.Visual",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/Blankslate.tsx",
        "description": "The title (heading) of the Blankslate.",
        "name": "Blankslate.Heading",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/Blankslate.tsx",
        "description": "An optional description for the Blankslate when the title needs supplemental information.",
        "name": "Blankslate.Description",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/Blankslate.tsx",
        "description": "The primary action to take in response to the messaging in Blankslate.",
        "name": "Blankslate.PrimaryAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/Blankslate.tsx",
        "description": "The secondary action to take in response to the messaging in Blankslate.",
        "name": "Blankslate.SecondaryAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Blankslate/index.tsx",
    "description": "",
    "name": "Blankslate",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "border",
        "type": "boolean",
        "required": false,
        "description": "Add a border around this component",
        "defaultValue": null
      },
      {
        "name": "narrow",
        "type": "boolean",
        "required": false,
        "description": "Constrain the maximum width of this component",
        "defaultValue": null
      },
      {
        "name": "spacious",
        "type": "boolean",
        "required": false,
        "description": "Increase the padding of this component",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Box/Box.tsx",
    "id": "box",
    "description": "Box is a basic wrapper component for most layout related needs.",
    "name": "Box",
    "status": "beta",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/BranchName/BranchName.tsx",
    "id": "branch_name",
    "description": "Branch name is a label-type component rendered as an <a> tag by default that displays the name of a branch.",
    "name": "BranchName",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Breadcrumbs/Breadcrumbs.tsx",
    "id": "breadcrumbs",
    "description": "Breadcrumbs display the current page or context within the site, allowing them to navigate different levels of the hierarchy.",
    "name": "Breadcrumbs",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Breadcrumbs/Breadcrumbs.tsx",
        "description": "Breadcrumbs.Item is used to represent each link in the Breadcrumbs component. The last item is not a link, it shows the current page.",
        "name": "Breadcrumbs.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "to",
            "type": "To",
            "required": false,
            "description": "Used when the item is rendered using a component like React Router's `Link`. The path to navigate to.",
            "defaultValue": null
          },
          {
            "name": "selected",
            "type": "boolean",
            "required": false,
            "description": "Whether this item represents the current page",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Button/Button.tsx",
    "description": "",
    "name": "Button",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "Size",
        "required": false,
        "description": "Size of button and fontSize of text in button",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Allow button width to fill its container.",
        "defaultValue": null
      },
      {
        "name": "leadingVisual",
        "type": "any",
        "required": false,
        "description": "The leading visual which comes before the button content",
        "defaultValue": null
      },
      {
        "name": "trailingVisual",
        "type": "any",
        "required": false,
        "description": "The trailing visual which comes after the button content",
        "defaultValue": null
      },
      {
        "name": "trailingAction",
        "type": "any",
        "required": false,
        "description": "Trailing action appears to the right of the trailing visual and is always locked to the end",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ButtonGroup/ButtonGroup.tsx",
    "id": "button_group",
    "description": "Button group renders a series of buttons.",
    "name": "ButtonGroup",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Checkbox/Checkbox.tsx",
    "id": "checkbox",
    "description": "An accessible, native checkbox component",
    "name": "Checkbox",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Apply inactive visual appearance to the checkbox",
        "defaultValue": null
      },
      {
        "name": "value",
        "type": "string | (string & readonly string[])",
        "required": false,
        "description": "A unique value that is never shown to the user.\nUsed during form submission and to identify which checkbox inputs are selected",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "Indicates whether the checkbox must be checked",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "Only used to inform ARIA attributes. Individual checkboxes do not have validation styles.",
        "defaultValue": null
      },
      {
        "name": "indeterminate",
        "type": "boolean",
        "required": false,
        "description": "Apply indeterminate visual appearance to the checkbox",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CheckboxGroup/CheckboxGroup.tsx",
    "id": "checkbox_group",
    "description": "Checkbox group renders a set of checkboxes.",
    "name": "CheckboxGroup",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "onChange",
        "type": "(selected: string[], e?: ChangeEvent<HTMLInputElement>) => void",
        "required": false,
        "description": "An onChange handler that gets called when any of the checkboxes change",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "Used when associating the input group with a label other than `CheckboxOrRadioGroup.Label`",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input group allows user input",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "The unique identifier for this input group. Used to associate the label, validation text, and caption text.\nYou may want a custom ID to make it easier to select elements in integration tests.",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "If true, the user must make a selection before the owning form can be submitted",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CheckboxGroup/CheckboxGroup.tsx",
        "description": "The caption with contextual information about the set of related checkboxes.",
        "name": "CheckboxGroup.Caption",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CheckboxGroup/CheckboxGroup.tsx",
        "description": "The name for the set of related checkboxes.",
        "name": "CheckboxGroup.Label",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "visuallyHidden",
            "type": "boolean",
            "required": false,
            "description": "Whether to visually hide the fieldset legend",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CheckboxGroup/CheckboxGroup.tsx",
        "description": "The message about the validation status of the set of related checkboxes.",
        "name": "CheckboxGroup.Caption",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "FormValidationStatus",
            "required": true,
            "description": "Changes the visual style to match the validation status",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CircleBadge/CircleBadge.tsx",
    "id": "circle_badge",
    "description": "Circle badge visually connects logos of third-party services, eg. in the marketplace.",
    "name": "CircleBadge",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "number",
        "required": false,
        "description": "Sets the size of the badge in pixels. Overrides the `variant` prop when set",
        "defaultValue": null
      },
      {
        "name": "inline",
        "type": "boolean",
        "required": false,
        "description": "Styles the badge to `display: inline`",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "Creates a smaller or larger badge. Has no effect if the `size` prop is set",
        "defaultValue": "medium"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CircleBadge/CircleBadge.tsx",
        "description": "The icon that appears inside of CircleBadge",
        "name": "CircleBadge.Icon",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "color",
            "type": "string",
            "required": false,
            "description": "Sets an override color for the Octicon. Compatible with colors from the [Primer color system](https://primer.style/primitives/colors).",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "React.ElementType",
            "required": true,
            "description": "Checks the input by default in uncontrolled modeName of the [Octicon component](https://primer.style/octicons/) used in the",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CircleOcticon/CircleOcticon.tsx",
    "id": "circle_octicon",
    "description": "Use circle octicon to render any Octicon with a circle background. CircleOcticons are most commonly used to represent the status of a pull request in the comment timeline.",
    "name": "CircleOcticon",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "React.ElementType",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "number & ResponsiveValue<Height<TLengthStyledSystem>, Required<Theme<TLengthStyledSystem>>>",
        "required": false,
        "description": "Set the width and height of the icon in pixels",
        "defaultValue": null
      },
      {
        "name": "icon",
        "type": "React.ComponentType<React.PropsWithChildren<{ size?: number | Size; }>>",
        "required": true,
        "description": "The Octicon to render in the circle",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ConfirmationDialog/ConfirmationDialog.tsx",
    "description": "This hook takes no parameters and returns an `async` function, `confirm`. When `confirm`\nis called, it shows the confirmation dialog. When the dialog is dismissed, a promise is\nresolved with `true` or `false` depending on whether or not the confirm button was used.",
    "name": "useConfirm",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ConfirmationDialog/ConfirmationDialog.tsx",
    "description": "A ConfirmationDialog is a special kind of dialog with more rigid behavior. It\nis used to confirm a user action. ConfirmationDialogs always have exactly\ntwo buttons: one to cancel the action and one to confirm it. No custom\nrendering capabilities are provided for ConfirmationDialog.",
    "name": "ConfirmationDialog",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "onClose",
        "type": "(gesture: \"escape\" | \"confirm\" | \"close-button\" | \"cancel\") => void",
        "required": true,
        "description": "Required. This callback is invoked when a gesture to close the dialog\nis performed. The first argument indicates the gesture.",
        "defaultValue": null
      },
      {
        "name": "title",
        "type": "React.ReactNode",
        "required": true,
        "description": "Required. The title of the ConfirmationDialog. This is usually a brief\nquestion.",
        "defaultValue": null
      },
      {
        "name": "cancelButtonContent",
        "type": "React.ReactNode",
        "required": false,
        "description": "The text to use for the cancel button. Default: \"Cancel\".",
        "defaultValue": null
      },
      {
        "name": "confirmButtonContent",
        "type": "React.ReactNode",
        "required": false,
        "description": "The text to use for the confirm button. Default: \"OK\".",
        "defaultValue": null
      },
      {
        "name": "confirmButtonType",
        "type": "\"normal\" | \"danger\" | \"primary\"",
        "required": false,
        "description": "The type of button to use for the confirm button. Default: Button.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/CounterLabel/CounterLabel.tsx",
    "id": "counter_label",
    "description": "Counter label is a numbered label accompanied by text. It's typically used in a button to indicate some count associated with the action.",
    "name": "CounterLabel",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "scheme",
        "type": "\"primary\" | \"secondary\"",
        "required": false,
        "description": "Pass in 'primary' for a darker background and inverse text, or 'secondary' for a lighter background and primary text. Omitting the scheme prop renders the default counter scheme",
        "defaultValue": "secondary"
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": "__DEV__\n  ? Object.freeze<BetterSystemStyleObject>({})\n  : {}"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/DataTable.tsx",
    "id": "data_table",
    "description": "The `table` element where all columns and rows are rendered.",
    "name": "DataTable",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      "drafts-components-datatable-features--with-title",
      "drafts-components-datatable-features--with-title-and-subtitle",
      "drafts-components-datatable-features--with-sorting",
      "drafts-components-datatable-features--with-actions",
      "drafts-components-datatable-features--with-action",
      "drafts-components-datatable-features--with-row-action",
      "drafts-components-datatable-features--with-row-actions",
      "drafts-components-datatable-features--with-row-action-menu",
      "drafts-components-datatable-features--with-custom-heading",
      "drafts-components-datatable-features--with-no-content",
      "drafts-components-datatable-features--with-loading",
      "drafts-components-datatable-features--with-pagination"
    ],
    "props": [
      {
        "name": "aria-describedby",
        "type": "string",
        "required": false,
        "description": "Provide an id to an element which uniquely describes this table",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "Provide an id to an element which uniquely labels this table",
        "defaultValue": null
      },
      {
        "name": "cellPadding",
        "type": "\"normal\" | \"condensed\" | \"spacious\"",
        "required": false,
        "description": "Specify the amount of space that should be available around the contents of\na cell",
        "defaultValue": null
      },
      {
        "name": "data",
        "type": "Data[]",
        "required": true,
        "description": "Provide a collection of the rows which will be rendered inside of the table",
        "defaultValue": null
      },
      {
        "name": "columns",
        "type": "Column<Data>[]",
        "required": true,
        "description": "Provide the columns for the table and the fields in `data` to which they\ncorrespond",
        "defaultValue": null
      },
      {
        "name": "initialSortColumn",
        "type": "string | number",
        "required": false,
        "description": "Provide the id or field of the column by which the table is sorted. When\nusing this `prop`, the input data must be sorted by this column in\nascending order",
        "defaultValue": null
      },
      {
        "name": "initialSortDirection",
        "type": "\"ASC\" | \"DESC\"",
        "required": false,
        "description": "Provide the sort direction that the table should be sorted by on the\ncurrently sorted column",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/ErrorDialog.tsx",
        "description": "A dialog for showing an error when rendering a DataTable",
        "name": "Table.ErrorDialog",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "title",
            "type": "string",
            "required": false,
            "description": "Provide an optional title for the dialog",
            "defaultValue": "Error"
          },
          {
            "name": "onRetry",
            "type": "() => void",
            "required": false,
            "description": "Provide an optional handler to be called when the user confirms to retry",
            "defaultValue": null
          },
          {
            "name": "onDismiss",
            "type": "() => void",
            "required": false,
            "description": "Provide an optional handler to be called when the user dismisses the dialog",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Pagination.tsx",
        "description": "A pagination component specific to the `DataTable` component.",
        "name": "Table.Pagination",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "string",
            "required": true,
            "description": "Provide a label for the navigation landmark rendered by this component",
            "defaultValue": null
          },
          {
            "name": "defaultPageIndex",
            "type": "number",
            "required": false,
            "description": "Provide an optional index to specify the default selected page",
            "defaultValue": null
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "Optionally provide an `id` that is placed on the navigation landmark\nrendered by this component",
            "defaultValue": null
          },
          {
            "name": "onChange",
            "type": "(state: PaginationState) => void",
            "required": false,
            "description": "Optionally provide a handler that is called whenever the pagination state\nis updated",
            "defaultValue": null
          },
          {
            "name": "pageSize",
            "type": "number",
            "required": false,
            "description": "Optionally specify the number of items within a page",
            "defaultValue": 25
          },
          {
            "name": "showPages",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to show the page numbers",
            "defaultValue": "{narrow: false}"
          },
          {
            "name": "totalCount",
            "type": "number",
            "required": true,
            "description": "Specify the total number of items within the collection",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "",
        "name": "Table.Container",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "",
        "name": "Table.Title",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "any",
            "required": false,
            "description": "Provide an alternate element or component to use as the container for\n`TableSubtitle`. This is useful when specifying markup that is more\nsemantic for your use-case, such as a heading tag.",
            "defaultValue": "h2"
          },
          {
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Provide a unique id for the table subtitle. This should be used along with\n`aria-labelledby` on `DataTable`",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "",
        "name": "Table.Subtitle",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "any",
            "required": false,
            "description": "Provide an alternate element or component to use as the container for\n`TableSubtitle`. This is useful when specifying markup that is more\nsemantic for your use-case",
            "defaultValue": "h2"
          },
          {
            "name": "id",
            "type": "string",
            "required": true,
            "description": "Provide a unique id for the table subtitle. This should be used along with\n`aria-describedby` on `DataTable`",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The container for a table component.",
        "name": "Table.Actions",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "An optional divider to separate the area that contains Table.Title and Table.Actions from Table.Subtitle.",
        "name": "Table.Divider",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The `table` element for a table component. Not intended to be used directly unless you are building your own table component.",
        "name": "Table",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-describedby",
            "type": "string",
            "required": false,
            "description": "Identifies the element (or elements) that describes the object.\nProvide an id to an element which uniquely describes this table\n@see aria-labelledby",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "string",
            "required": false,
            "description": "Identifies the element (or elements) that labels the current element.\nProvide an id to an element which uniquely labels this table\n@see aria-describedby.",
            "defaultValue": null
          },
          {
            "name": "cellPadding",
            "type": "\"normal\" | \"condensed\" | \"spacious\"",
            "required": false,
            "description": "Specify the amount of space that should be available around the contents of\na cell",
            "defaultValue": "normal"
          },
          {
            "name": "gridTemplateColumns",
            "type": "React.CSSProperties",
            "required": false,
            "description": "Column width definitions",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The `thead` element for a table component. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.Head",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The `tbody` element for a table component. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.Body",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The `tr` element for a table component. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.Row",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The `th` element for a table component. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.Header",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "align",
            "type": "CellAlignment",
            "required": false,
            "description": "The horizontal alignment of the cell's content",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "Same as `Table.Header`, but each `th` contains a button that performs a sort. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.SortHeader",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "align",
            "type": "CellAlignment",
            "required": false,
            "description": "The horizontal alignment of the cell's content",
            "defaultValue": null
          },
          {
            "name": "direction",
            "type": "SortDirection",
            "required": true,
            "description": "Specify the sort direction for the TableHeader",
            "defaultValue": null
          },
          {
            "name": "onToggleSort",
            "type": "() => void",
            "required": true,
            "description": "Provide a handler that is called when the sortable TableHeader is\ninteracted with via a click or keyboard interaction",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "The `td` or `tr` element for a table component. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.Cell",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "scope",
            "type": "\"row\"",
            "required": false,
            "description": "Provide the scope for a table cell, useful for defining a row header using\n`scope=\"row\"`",
            "defaultValue": null
          },
          {
            "name": "align",
            "type": "CellAlignment",
            "required": false,
            "description": "The horizontal alignment of the cell's content",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "Placeholder content to be used inside of a TableCell.",
        "name": "Table.CellPlaceholder",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/DataTable/Table.tsx",
        "description": "A placeholder \"skeleton\" to use when table content is loading. Not intended to be used directly unless you are building your own table component.",
        "name": "Table.Skeleton",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "cellPadding",
            "type": "\"normal\" | \"condensed\" | \"spacious\"",
            "required": false,
            "description": "Specify the amount of space that should be available around the contents of\na cell",
            "defaultValue": "normal"
          },
          {
            "name": "columns",
            "type": "Column<Data>[]",
            "required": true,
            "description": "Provide an array of columns for the table. Columns will render as the headers\nof the table.",
            "defaultValue": null
          },
          {
            "name": "rows",
            "type": "number",
            "required": false,
            "description": "Optionally specify the number of rows which should be included in the\nskeleton state of the component",
            "defaultValue": 10
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Details/Details.tsx",
    "id": "details",
    "description": "Details is a styled component to enhance the native behaviors of the <details> element.",
    "name": "Details",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
    "id": "dialog_v2",
    "description": "A dialog is a type of overlay that can be used for confirming actions, asking\nfor disambiguation, and presenting small forms. They generally allow the user\nto focus on a quick task without having to navigate to a different page.\n\nDialogs appear in the page after a direct user interaction. Don't show dialogs\non page load or as system alerts.\n\nDialogs appear centered in the page, with a visible backdrop that dims the rest\nof the window for focus.\n\nAll dialogs have a title and a close button.\n\nDialogs are modal. Dialogs can be dismissed by clicking on the close button,\npressing the escape key, or by interacting with another button in the dialog.\nTo avoid losing information and missing important messages, clicking outside\nof the dialog will not close it.\n\nThe sub components provided (e.g. Header, Title, etc.) are available for custom\nrenderers only. They are not intended to be used otherwise.",
    "docsId": "dialog",
    "name": "Dialog",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "title",
        "type": "React.ReactNode",
        "required": false,
        "description": "Title of the Dialog. Also serves as the aria-label for this Dialog.",
        "defaultValue": null
      },
      {
        "name": "subtitle",
        "type": "React.ReactNode",
        "required": false,
        "description": "The Dialog's subtitle. Optional. Rendered below the title in smaller\ntype with less contrast. Also serves as the aria-describedby for this\nDialog.",
        "defaultValue": null
      },
      {
        "name": "renderHeader",
        "type": "FunctionComponent<PropsWithChildren<DialogHeaderProps>>",
        "required": false,
        "description": "Provide a custom renderer for the dialog header. This content is\nrendered directly into the dialog body area, full bleed from edge\nto edge, top to the start of the body element.\n\nWarning: using a custom renderer may violate Primer UX principles.",
        "defaultValue": null
      },
      {
        "name": "renderBody",
        "type": "FunctionComponent<PropsWithChildren<DialogProps>>",
        "required": false,
        "description": "Provide a custom render function for the dialog body. This content is\nrendered directly into the dialog body area, full bleed from edge to\nedge, header to footer.\n\nWarning: using a custom renderer may violate Primer UX principles.",
        "defaultValue": null
      },
      {
        "name": "renderFooter",
        "type": "FunctionComponent<PropsWithChildren<DialogProps>>",
        "required": false,
        "description": "Provide a custom render function for the dialog footer. This content is\nrendered directly into the dialog footer area, full bleed from edge to\nedge, end of the body element to bottom.\n\nWarning: using a custom renderer may violate Primer UX principles.",
        "defaultValue": null
      },
      {
        "name": "footerButtons",
        "type": "DialogButtonProps[]",
        "required": false,
        "description": "Specifies the buttons to be rendered in the Dialog footer.",
        "defaultValue": null
      },
      {
        "name": "onClose",
        "type": "(gesture: \"escape\" | \"close-button\") => void",
        "required": true,
        "description": "This method is invoked when a gesture to close the dialog is used (either\nan Escape key press, clicking the backdrop, or clicking the \"X\" in the top-right corner). The\ngesture argument indicates the gesture that was used to close the dialog\n('close-button' or 'escape').",
        "defaultValue": null
      },
      {
        "name": "role",
        "type": "\"dialog\" | \"alertdialog\"",
        "required": false,
        "description": "Default: \"dialog\". The ARIA role to assign to this dialog.\n@see https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal\n@see https://www.w3.org/TR/wai-aria-practices-1.1/#alertdialog",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "\"small\" | \"large\" | \"medium\" | \"xlarge\"",
        "required": false,
        "description": "The width of the dialog.\nsmall: 296px\nmedium: 320px\nlarge: 480px\nxlarge: 640px",
        "defaultValue": null
      },
      {
        "name": "height",
        "type": "\"small\" | \"large\" | \"auto\"",
        "required": false,
        "description": "The height of the dialog.\nsmall: 296x480\nlarge: 480x640\nauto: variable based on contents",
        "defaultValue": null
      },
      {
        "name": "position",
        "type": "\"center\" | \"left\" | \"right\" | ResponsiveValue<\"center\" | \"left\" | \"right\" | \"bottom\" | \"fullscreen\">",
        "required": false,
        "description": "The position of the dialog",
        "defaultValue": null
      },
      {
        "name": "returnFocusRef",
        "type": "React.RefObject<HTMLElement>",
        "required": false,
        "description": "Return focus to this element when the Dialog closes,\ninstead of the element that had focus immediately before the Dialog opened",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The header area of a Dialog.",
        "name": "Dialog.Header",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The title rendered in the header of the Dialog.",
        "name": "Dialog.Title",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The subtitle rendered in the header of the Dialog.",
        "name": "Dialog.Subtitle",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The main content of a Dialog.",
        "name": "Dialog.Body",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The footer area of a Dialog.",
        "name": "Dialog.Footer",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The buttons rendered in the footer area of a Dialog.",
        "name": "Dialog.Buttons",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "buttons",
            "type": "DialogButtonProps[]",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Dialog/Dialog.tsx",
        "description": "The close button rendered in the header area of a Dialog.",
        "name": "Dialog.CloseButton",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "onClose",
            "type": "() => void",
            "required": true,
            "description": "Callback for closing the Dialog",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FeatureFlags/FeatureFlags.tsx",
    "description": "",
    "name": "FeatureFlags",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "flags",
        "type": "FeatureFlags",
        "required": true,
        "description": "Object where keys are feature flag names and values are boolean",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FilteredActionList/FilteredActionList.tsx",
    "description": "",
    "name": "FilteredActionList",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "loading",
        "type": "boolean",
        "required": false,
        "description": "Whether the items are loading",
        "defaultValue": false
      },
      {
        "name": "placeholderText",
        "type": "string",
        "required": false,
        "description": "Text used as placeholder for search input",
        "defaultValue": null
      },
      {
        "name": "filterValue",
        "type": "string",
        "required": false,
        "description": "The current value of the search input",
        "defaultValue": null
      },
      {
        "name": "onFilterChange",
        "type": "(value: string, e: React.ChangeEvent<HTMLInputElement>) => void",
        "required": true,
        "description": "Callback when the search input changes",
        "defaultValue": null
      },
      {
        "name": "textInputProps",
        "type": "Partial<Omit<TextInputProps, \"onChange\">>",
        "required": false,
        "description": "Props to pass through to the search input",
        "defaultValue": null
      },
      {
        "name": "inputRef",
        "type": "React.RefObject<HTMLInputElement>",
        "required": false,
        "description": "Ref to pass through to the search input",
        "defaultValue": null
      },
      {
        "name": "groupMetadata",
        "type": "((Omit<GroupProps, \"items\"> | Omit<Partial<GroupProps> & { renderItem?: RenderItemFn; renderGroup?: ({ header, items, ...props }: GroupProps) => Element; }, \"items\">) & { ...; })[]",
        "required": false,
        "description": "A collection of `Group` props (except `items`), plus a unique group identifier\nand `Group`-level custom `Item` or `Group` renderers.",
        "defaultValue": null
      },
      {
        "name": "items",
        "type": "ItemInput[]",
        "required": true,
        "description": "A collection of `Item` props and `Item`-level custom `Item` renderers.",
        "defaultValue": null
      },
      {
        "name": "role",
        "type": "AriaRole",
        "required": false,
        "description": "The ARIA role describing the function of `List` component. `listbox` is a common value.",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "id to attach to the base DOM node of the list",
        "defaultValue": null
      },
      {
        "name": "renderItem",
        "type": "RenderItemFn",
        "required": false,
        "description": "A `List`-level custom `Item` renderer. Every `Item` within this `List`\nwithout a `Group`-level or `Item`-level custom `Item` renderer will be\nrendered using this function component.",
        "defaultValue": null
      },
      {
        "name": "renderGroup",
        "type": "({ header, items, ...props }: GroupProps) => Element",
        "required": false,
        "description": "A `List`-level custom `Group` renderer. Every `Group` within this `List`\nwithout a `Group`-level custom `Item` renderer will be rendered using\nthis function component.",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"inset\" | \"full\"",
        "required": false,
        "description": "Style variations. Usage is discretionary.\n\n- `\"inset\"` - `List` children are offset (vertically and horizontally) from `List`’s edges\n- `\"full\"` - `List` children are flush (vertically and horizontally) with `List` edges",
        "defaultValue": null
      },
      {
        "name": "selectionVariant",
        "type": "\"multiple\" | \"single\"",
        "required": false,
        "description": "For `Item`s which can be selected, whether `multiple` `Item`s or a `single` `Item` can be selected",
        "defaultValue": null
      },
      {
        "name": "showItemDividers",
        "type": "boolean",
        "required": false,
        "description": "Whether to display a divider above each `Item` in this `List` when it does not follow a `Header` or `Divider`.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/FormControl.tsx",
    "id": "form_control",
    "description": "Form control displays a labelled input and, optionally, associated validation text and/or hint text.",
    "name": "FormControl",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the control allows user input",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "The unique identifier for this control. Used to associate the label, validation text, and caption text",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "If true, the user must specify a value for the input before the owning form can be submitted",
        "defaultValue": null
      },
      {
        "name": "layout",
        "type": "\"vertical\" | \"horizontal\"",
        "required": false,
        "description": "The direction the content flows.\nVertical layout is used by default, and horizontal layout is used for checkbox and radio inputs.",
        "defaultValue": "vertical"
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlCaption.tsx",
        "description": "The caption with contextual information about the field.",
        "name": "FormControl.Caption",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "Custom ID to override the ID set by FormControl's React Context",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlLabel.tsx",
        "description": "The label for the input in the field.",
        "name": "FormControl.Label",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "required",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "requiredText",
            "type": "string",
            "required": false,
            "description": "The text to display when the field is required",
            "defaultValue": "*"
          },
          {
            "name": "requiredIndicator",
            "type": "boolean",
            "required": false,
            "description": "Whether to show or hide the required text in the accessibility tree, the required text is still shown visually.",
            "defaultValue": true
          },
          {
            "name": "visuallyHidden",
            "type": "boolean",
            "required": false,
            "description": "Whether the label should be visually hidden",
            "defaultValue": "false"
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "When `as` prop is 'label', it may be used to override the `htmlFor` given to the <label> element by FormControl's React Context.\nWhen 'as' prop is 'legend' or 'span', it is used as the `id` for the element.",
            "defaultValue": null
          },
          {
            "name": "htmlFor",
            "type": "string",
            "required": false,
            "description": "The unique identifier for the associated input\nThis prop may be used to override the `htmlFor` set from FormControl's React Context.",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"label\" | \"legend\" | \"span\"",
            "required": false,
            "description": "The label element can be changed to a 'legend' when it's being used to label a fieldset, or a 'span' when it's being used to label an element that is not a form input. For example: when using a FormControl to render a labeled SegementedControl, the label should be a 'span'",
            "defaultValue": "label"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlLeadingVisual.tsx",
        "description": "The visual element that appears before the input in a form control.",
        "name": "FormControl.LeadingVisual",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlValidation.tsx",
        "description": "A message that provides feedback on the validation status of the field.",
        "name": "FormControl.Validation",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "FormValidationStatus",
            "required": true,
            "description": "Changes the visual style to match the validation status",
            "defaultValue": null
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "May be used to override the ID assigned by FormControl's React Context",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlContext.tsx",
    "description": "This is the private/internal interface for subcomponents of `FormControl`.",
    "name": "useFormControlContext",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlContext.tsx",
    "description": "Make any component compatible with `FormControl`'s automatic wiring up of accessibility attributes & validation by\nreading the props from this hook and merging them with the passed-in props. If used outside of `FormControl`, this\nhook has no effect.\nMake any component compatible with `FormControl`'s automatic wiring up of accessibility attributes & validation by\nreading the props from this hook and handling them / assigning them to the underlying form control. If used outside\nof `FormControl`, this hook has no effect.",
    "name": "useFormControlForwardedProps",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/FormControl/_FormControlContext.tsx",
    "description": "",
    "name": "FormControlContextProvider",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Header/Header.tsx",
    "description": "",
    "name": "Header.Item",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Hidden/Hidden.tsx",
    "id": "drafts_hidden",
    "description": "Prevents children from rendered on specified viewport widths.",
    "name": "Hidden",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "when",
        "type": "Viewport | Viewport[]",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Hidden/index.tsx",
    "id": "drafts_hidden",
    "description": "Prevents children from rendered on specified viewport widths.",
    "name": "Hidden",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "when",
        "type": "Viewport | Viewport[]",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/InlineMessage/InlineMessage.tsx",
    "id": "inline_message",
    "description": "Inline message is used to inform the user about the result of an action within the content.",
    "name": "InlineMessage",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "\"small\" | \"medium\"",
        "required": false,
        "description": "Specify the size of the InlineMessage",
        "defaultValue": "medium"
      },
      {
        "name": "variant",
        "type": "MessageVariant",
        "required": true,
        "description": "Specify the type of the InlineMessage",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/LabelGroup/LabelGroup.tsx",
    "id": "label_group",
    "description": "Use label group to add commonly used margins and other layout constraints to groups of Labels",
    "name": "LabelGroup",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "overflowStyle",
        "type": "\"inline\" | \"overlay\"",
        "required": false,
        "description": "How hidden tokens should be shown. `'inline'` shows the hidden tokens after the visible tokens. `'overlay'` shows all tokens in an overlay that appears on top of the visible tokens.",
        "defaultValue": "overlay"
      },
      {
        "name": "visibleChildCount",
        "type": "number | \"auto\"",
        "required": false,
        "description": "How many tokens to show. `'auto'` truncates the tokens to fit in the parent container. Passing a number will truncate after that number tokens. If this is undefined, tokens will never be truncated.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
    "id": "nav_list",
    "description": "Nav list renders a vertical list of navigation links.",
    "name": "NavList",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "children",
        "type": "any",
        "required": false,
        "description": "NavList items",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
        "description": "A navigation item in the NavList.",
        "name": "NavList.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
        "description": "A nested list of navigation items that appears when a NavList.Item is expanded.\nNavList.SubNav must be a direct child of an Item",
        "name": "NavList.SubNav",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
        "description": "Used to visually separate group of related NavList.Items",
        "name": "NavList.Divider",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
        "description": "An action that appears after the text in a NavList.Item",
        "name": "NavList.TrailingAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | (\"a\" & (ComponentClass<...> | FunctionComponent<...>))",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
        "description": "Used to group of related NavList.Items",
        "name": "NavList.Group",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
    "description": "",
    "name": "LeadingVisual",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/NavList/NavList.tsx",
    "description": "",
    "name": "TrailingVisual",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Octicon/Octicon.tsx",
    "id": "octicon",
    "description": "Renders an icon from the [Primer Octicons](https://primer.style/octicons/) library.",
    "name": "Octicon",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "color",
        "type": "string",
        "required": false,
        "description": "Sets an override color for the Octicon. Compatible with colors from the [Primer color system](https://primer.style/primitives/colors).",
        "defaultValue": null
      },
      {
        "name": "icon",
        "type": "React.ElementType",
        "required": true,
        "description": "Checks the input by default in uncontrolled modeName of the [Octicon component](https://primer.style/octicons/) used in the",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Overlay/Overlay.tsx",
    "description": "",
    "name": "StyledOverlay",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "style",
        "type": "any",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "height",
        "type": "\"small\" | \"initial\" | \"large\" | \"medium\" | \"auto\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "\"small\" | \"large\" | \"medium\" | \"auto\" | \"xlarge\" | \"xxlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "overflow",
        "type": "\"hidden\" | \"scroll\" | \"auto\" | \"visible\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "visibility",
        "type": "\"hidden\" | \"visible\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "maxHeight",
        "type": "\"small\" | \"large\" | \"medium\" | \"fit-content\" | \"xsmall\" | \"xlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "maxWidth",
        "type": "\"small\" | \"large\" | \"medium\" | \"xlarge\" | \"xxlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "anchorSide",
        "type": "AnchorSide",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
    "id": "drafts_page_header",
    "description": "Page header determines the top-level headings of a UI.",
    "name": "Root",
    "status": "draft",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "any",
        "required": false,
        "description": "",
        "defaultValue": "h2"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "Only visible on narrow viewports by default to provide user context of where they are at their journey. `hidden` prop available\nto manage their custom visibility but consumers should be careful if they choose to hide this on narrow viewports.\nPageHeader.ContextArea Sub Components: PageHeader.ParentLink, PageHeader.ContextBar, PageHeader.ContextAreaActions",
        "name": "PageHeader.ContextArea",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "Only visible on narrow viewports by default to let users navigate up in the hierarchy.",
        "name": "PageHeader.ParentLink",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "keyof IntrinsicElements",
            "required": false,
            "description": "",
            "defaultValue": "h2"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "Generic slot for any component above the title region. Use it for custom breadcrumbs and other navigation elements instead of ParentLink.",
        "name": "PageHeader.ContextBar",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.ContextAreaActions",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "The main title area of the page. Visible on all viewports.\nSub Components: PageHeader.LeadingVisual, PageHeader.Title, PageTitle.TrailingVisual",
        "name": "PageHeader.TitleArea",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
            "required": false,
            "description": "",
            "defaultValue": "h2"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.LeadingAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.Breadcrumbs",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.LeadingVisual",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.Title",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"",
            "required": false,
            "description": "",
            "defaultValue": "h2"
          },
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.TrailingVisual",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.TrailingAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "",
        "name": "PageHeader.Actions",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "The description area of the header. Visible on all viewports",
        "name": "PageHeader.Description",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageHeader/PageHeader.tsx",
        "description": "The local navigation area of the header. Visible on all viewports",
        "name": "PageHeader.Navigation",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"div\" | \"nav\"",
            "required": false,
            "description": "",
            "defaultValue": "h2"
          },
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "className",
            "type": "string",
            "required": false,
            "description": "Class name(s) to override styles",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether to hide the component.\nThe component can be hidden for all viewport widths, or specified viewport widths.\nSome children have a default value for this prop:\n- `PageHeader.ContextArea`, `PageHeader.ContextAreaActions`, `PageHeader.ContextBar`, and `PageHeader.ParentLink` are hidden on regular and wide viewports by default.\n- `PageHeader.LeadingAction`, and `PageHeader.TrailingAction` are hidden on narrow viewports by default.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageLayout/PageLayout.tsx",
    "id": "page_layout",
    "description": "Page layout defines the header, main, pane, and footer areas of a page.",
    "name": "PageLayout",
    "status": "alpha",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "containerWidth",
        "type": "\"large\" | \"medium\" | \"full\" | \"xlarge\"",
        "required": false,
        "description": "The maximum width of the page container",
        "defaultValue": "xlarge"
      },
      {
        "name": "padding",
        "type": "\"normal\" | \"none\" | \"condensed\"",
        "required": false,
        "description": "The spacing between the outer edges of the page container and the viewport",
        "defaultValue": "none"
      },
      {
        "name": "rowGap",
        "type": "\"normal\" | \"none\" | \"condensed\"",
        "required": false,
        "description": "The spacing between the content, header, and footer areas",
        "defaultValue": "normal"
      },
      {
        "name": "columnGap",
        "type": "\"normal\" | \"none\" | \"condensed\"",
        "required": false,
        "description": "The spacing between the content area and pane(s)",
        "defaultValue": "normal"
      },
      {
        "name": "_slotsConfig",
        "type": "Record<\"footer\" | \"header\", React.ElementType>",
        "required": false,
        "description": "Private prop to allow SplitPageLayout to customize slot components",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": "{}"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageLayout/PageLayout.tsx",
        "description": "The header area of the overall page layout.",
        "name": "PageLayout.Header",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "A unique label for the rendered banner landmark",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "An id to an element which uniquely labels the rendered banner landmark",
            "defaultValue": null
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "",
            "defaultValue": "none"
          },
          {
            "name": "divider",
            "type": "\"line\" | \"none\" | ResponsiveValue<\"line\" | \"none\", \"line\" | \"none\" | \"filled\">",
            "required": false,
            "description": "",
            "defaultValue": "none"
          },
          {
            "name": "dividerWhenNarrow",
            "type": "\"line\" | \"inherit\" | \"none\" | \"filled\"",
            "required": false,
            "description": "@deprecated Use the `divider` prop with a responsive value instead.\n\nBefore:\n```\ndivider=\"line\"\ndividerWhenNarrow=\"filled\"\n```\n\nAfter:\n```\ndivider={{regular: 'line', narrow: 'filled'}}\n```",
            "defaultValue": "inherit"
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageLayout/PageLayout.tsx",
        "description": "The main content area.",
        "name": "PageLayout.Content",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "React.ElementType",
            "required": false,
            "description": "Provide an optional element type for the outermost element rendered by the component.",
            "defaultValue": "main"
          },
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "A unique label for the rendered main landmark",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "An id to an element which uniquely labels the rendered main landmark",
            "defaultValue": null
          },
          {
            "name": "width",
            "type": "\"large\" | \"medium\" | \"full\" | \"xlarge\"",
            "required": false,
            "description": "The maximum width of the content region.",
            "defaultValue": "medium"
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "The amount of padding inside the content.",
            "defaultValue": "none"
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageLayout/PageLayout.tsx",
        "description": "Area for supplemental page content. Used like sidebars on wide viewports.",
        "name": "PageHeader.Pane",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "position",
            "type": "\"end\" | \"start\" | ResponsiveValue<\"end\" | \"start\">",
            "required": false,
            "description": "Which side of the page the pane should be on. Can be changed for different viewport widths.",
            "defaultValue": null
          },
          {
            "name": "positionWhenNarrow",
            "type": "\"end\" | \"start\" | \"inherit\"",
            "required": false,
            "description": "@deprecated Use the `position` prop with a responsive value instead.\n\nBefore:\n```\nposition=\"start\"\npositionWhenNarrow=\"end\"\n```\n\nAfter:\n```\nposition={{regular: 'start', narrow: 'end'}}\n```",
            "defaultValue": "inherit"
          },
          {
            "name": "aria-labelledby",
            "type": "string",
            "required": false,
            "description": "Id of an element that acts as a label for the pane. Required if the pane overflows and doesn't have aria-label.",
            "defaultValue": null
          },
          {
            "name": "aria-label",
            "type": "string",
            "required": false,
            "description": "Label for the pane. Required if the pane overflows and doesn't have aria-labelledby.",
            "defaultValue": null
          },
          {
            "name": "width",
            "type": "\"small\" | \"large\" | \"medium\" | CustomWidthOptions",
            "required": false,
            "description": "The width of the pane. If using custom widths, provide an object with keys 'min', 'max' and 'default'.",
            "defaultValue": "medium"
          },
          {
            "name": "minWidth",
            "type": "number",
            "required": false,
            "description": "The minimum width of the pane.",
            "defaultValue": 256
          },
          {
            "name": "resizable",
            "type": "boolean",
            "required": false,
            "description": "When true, the pane may be resized by the user.",
            "defaultValue": false
          },
          {
            "name": "widthStorageKey",
            "type": "string",
            "required": false,
            "description": "Provide a key used by localStorage to persist the size of the pane on the client.",
            "defaultValue": "paneWidth"
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "The amount of padding inside the pane.",
            "defaultValue": "none"
          },
          {
            "name": "divider",
            "type": "\"line\" | \"none\" | ResponsiveValue<\"line\" | \"none\", \"line\" | \"none\" | \"filled\">",
            "required": false,
            "description": "The divider style between the pane and the content region.",
            "defaultValue": "none"
          },
          {
            "name": "dividerWhenNarrow",
            "type": "\"line\" | \"inherit\" | \"none\" | \"filled\"",
            "required": false,
            "description": "@deprecated Use the `divider` prop with a responsive value instead.\n\nBefore:\n```\ndivider=\"line\"\ndividerWhenNarrow=\"filled\"\n```\n\nAfter:\n```\ndivider={{regular: 'line', narrow: 'filled'}}\n```",
            "defaultValue": "inherit"
          },
          {
            "name": "sticky",
            "type": "boolean",
            "required": false,
            "description": "Whether the pane should stick to the top of the screen while the content scrolls.",
            "defaultValue": false
          },
          {
            "name": "offsetHeader",
            "type": "string | number",
            "required": false,
            "description": "Use offsetHeader along with the sticky prop to push the sticky pane down to make room for a sticky header if necessary. Use the type `string` to specify the height with a unit i.e. 5rem; otherwise the type `number` will be taken as px.",
            "defaultValue": 0
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether the pane is hidden. Can be changed for different viewport widths.",
            "defaultValue": false
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "May be used to override the default ID passed to the pane element.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PageLayout/PageLayout.tsx",
        "description": "The footer area of the overall page layout.",
        "name": "PageHeader.Footer",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "A unique label for the rendered contentinfo landmark",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "An id to an element which uniquely labels the rendered contentinfo landmark",
            "defaultValue": null
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "The amount of padding inside the footer.",
            "defaultValue": "none"
          },
          {
            "name": "divider",
            "type": "\"line\" | \"none\" | ResponsiveValue<\"line\" | \"none\", \"line\" | \"none\" | \"filled\">",
            "required": false,
            "description": "The divider style between the footer and the content region. Can be changed for different viewport widths.",
            "defaultValue": "none"
          },
          {
            "name": "dividerWhenNarrow",
            "type": "\"line\" | \"inherit\" | \"none\" | \"filled\"",
            "required": false,
            "description": "@deprecated Use the `divider` prop with a responsive value instead.\n\nBefore:\n```\ndivider=\"line\"\ndividerWhenNarrow=\"filled\"\n```\n\nAfter:\n```\ndivider={{regular: 'line', narrow: 'filled'}}\n```",
            "defaultValue": "inherit"
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether the footer is hidden.  Can be changed for different viewport widths.",
            "defaultValue": false
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": "{}"
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Pagehead/Pagehead.tsx",
    "id": "pagehead",
    "description": "Pagehead denotes the title and start of a given section.",
    "name": "Pagehead",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Pagination/Pagination.tsx",
    "id": "pagination",
    "description": "Pagination is a horizontal set of links to navigate paginated content.",
    "name": "Pagination",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "theme",
        "type": "Record<string, unknown>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "pageCount",
        "type": "number",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "currentPage",
        "type": "number",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onPageChange",
        "type": "(e: React.MouseEvent, n: number) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "hrefBuilder",
        "type": "(n: number) => string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "marginPageCount",
        "type": "number",
        "required": false,
        "description": "",
        "defaultValue": 1
      },
      {
        "name": "showPages",
        "type": "boolean | ResponsiveValue<boolean>",
        "required": false,
        "description": "",
        "defaultValue": true
      },
      {
        "name": "surroundingPageCount",
        "type": "number",
        "required": false,
        "description": "",
        "defaultValue": 2
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/PointerBox/PointerBox.tsx",
    "id": "pointer_box",
    "description": "A customisable bordered box with a caret pointer",
    "name": "PointerBox",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "caret",
        "type": "Location",
        "required": false,
        "description": "Sets the location of the caret. The format is [edge]-[position on edge]. For example, right-top will position the caret on the top of the right edge of the box.",
        "defaultValue": null
      },
      {
        "name": "bg",
        "type": "string & ResponsiveValue<string | number | symbol, Required<Theme<TLengthStyledSystem>>>",
        "required": false,
        "description": "Background color of the box\nThe color utility parses a component's `color` and `bg` props and converts them into CSS declarations.\nBy default the raw value of the prop is returned.\n\nColor palettes can be configured with the ThemeProvider to use keys as prop values, with support for dot notation.\nArray values are converted into responsive values.\n\n[MDN Reference](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color)",
        "defaultValue": null
      },
      {
        "name": "borderColor",
        "type": "string & ResponsiveValue<string | number | symbol, Required<Theme<TLengthStyledSystem>>>",
        "required": false,
        "description": "Color of the border around the box\nThe border-color shorthand CSS property sets the color of all sides of an element's border.\n\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border-color)",
        "defaultValue": null
      },
      {
        "name": "border",
        "type": "(string | number) & ResponsiveValue<Border<TLengthStyledSystem>, Required<Theme<TLengthStyledSystem>>>",
        "required": false,
        "description": "Width of the border around the box\nThe border CSS property sets an element's border. It's a shorthand for border-width, border-style,\nand border-color.\n\n[MDN reference](https://developer.mozilla.org/en-US/docs/Web/CSS/border)",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject & { bg?: string; backgroundColor?: string; borderColor?: string; }",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Popover/Popover.tsx",
    "description": "",
    "name": "Popover.Content",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "Controls the visibility of the popover.",
        "defaultValue": null
      },
      {
        "name": "caret",
        "type": "CaretPosition",
        "required": false,
        "description": "Controls the position of the caret",
        "defaultValue": "top"
      },
      {
        "name": "relative",
        "type": "boolean",
        "required": false,
        "description": "Set to true to render the popover using relative positioning.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Portal/Portal.tsx",
    "description": "Register a container to serve as a portal root.",
    "name": "registerPortalRoot",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Portal/Portal.tsx",
    "id": "portal",
    "description": "Creates a React Portal, placing all children in a separate physical DOM root node.",
    "name": "Portal",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "onMount",
        "type": "() => void",
        "required": false,
        "description": "Called when this portal is added to the DOM",
        "defaultValue": null
      },
      {
        "name": "containerName",
        "type": "string",
        "required": false,
        "description": "Optional. Mount this portal at the container specified\nby this name. The container must be previously registered\nwith `registerPortal`.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ProgressBar/ProgressBar.tsx",
    "id": "progress_bar",
    "description": "Progress bar visualizes one or more parts of a whole.",
    "name": "ProgressBar",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "bg",
        "type": "string",
        "required": false,
        "description": "Set the progress bar color",
        "defaultValue": "success.emphasis"
      },
      {
        "name": "inline",
        "type": "boolean",
        "required": false,
        "description": "Styles the progress bar inline",
        "defaultValue": null
      },
      {
        "name": "barSize",
        "type": "\"small\" | \"default\" | \"large\"",
        "required": false,
        "description": "Controls the height of the progress bar. If omitted, height is set to the default height.",
        "defaultValue": "default"
      },
      {
        "name": "animated",
        "type": "boolean",
        "required": false,
        "description": "Whether the filled in area(s) of the progress bar will be animated or not",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "progress",
        "type": "string | number",
        "required": false,
        "description": "Used to set the size of the green bar",
        "defaultValue": "0"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ProgressBar/ProgressBar.tsx",
        "description": "A segment of a ProgressBar with multiple parts.",
        "name": "ProgressBar.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "progress",
            "type": "string | number",
            "required": false,
            "description": "Used to set the size of the green bar",
            "defaultValue": "0"
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Radio/Radio.tsx",
    "id": "radio",
    "description": "An accessible, native radio component for selecting one option from a list.",
    "name": "Radio",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "Name attribute of the input element. Required for grouping radio inputs",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Apply inactive visual appearance to the radio button",
        "defaultValue": null
      },
      {
        "name": "value",
        "type": "string | (string & readonly string[])",
        "required": false,
        "description": "A unique value that is never shown to the user.\nUsed during form submission and to identify which radio button in a group is selected",
        "defaultValue": null
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": "Indicates whether the radio button is selected",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "Indicates whether the radio button must be checked before the form can be submitted",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "Only used to inform ARIA attributes. Individual radio inputs do not have validation styles.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/RadioGroup/RadioGroup.tsx",
    "id": "radio_group",
    "description": "Radio group is used to render a short list of mutually exclusive options.",
    "name": "RadioGroup",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "onChange",
        "type": "(selected: string, e?: ChangeEvent<HTMLInputElement>) => void",
        "required": false,
        "description": "An onChange handler that gets called when the selection changes",
        "defaultValue": null
      },
      {
        "name": "name",
        "type": "string",
        "required": true,
        "description": "The name used to identify this group of radios",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "Used when associating the input group with a label other than `CheckboxOrRadioGroup.Label`",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input group allows user input",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "The unique identifier for this input group. Used to associate the label, validation text, and caption text.\nYou may want a custom ID to make it easier to select elements in integration tests.",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "If true, the user must make a selection before the owning form can be submitted",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/RadioGroup/RadioGroup.tsx",
        "description": "The caption with contextual information about the set of related checkboxes.",
        "name": "RadioGroup.Caption",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/RadioGroup/RadioGroup.tsx",
        "description": "The name for the set of related checkboxes.",
        "name": "RadioGroup.Label",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "visuallyHidden",
            "type": "boolean",
            "required": false,
            "description": "Whether to visually hide the fieldset legend",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/RadioGroup/RadioGroup.tsx",
        "description": "The message about the validation status of the set of related checkboxes.",
        "name": "RadioGroup.Caption",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "FormValidationStatus",
            "required": true,
            "description": "Changes the visual style to match the validation status",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/RelativeTime/RelativeTime.tsx",
    "id": "relative_time",
    "description": "Relative time displays time in a way that is clear, concise, and accessible.",
    "name": "RelativeTime",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "format",
        "type": "Format",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onRelativeTimeUpdated",
        "type": "(event: RelativeTimeUpdatedEvent) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "second",
        "type": "\"numeric\" | \"2-digit\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "minute",
        "type": "\"numeric\" | \"2-digit\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "hour",
        "type": "\"numeric\" | \"2-digit\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "weekday",
        "type": "\"narrow\" | \"short\" | \"long\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "day",
        "type": "\"numeric\" | \"2-digit\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "month",
        "type": "\"numeric\" | \"narrow\" | \"2-digit\" | \"short\" | \"long\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "year",
        "type": "\"numeric\" | \"2-digit\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "timeZoneName",
        "type": "\"short\" | \"long\" | \"shortOffset\" | \"longOffset\" | \"shortGeneric\" | \"longGeneric\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "threshold",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "tense",
        "type": "Tense",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "precision",
        "type": "\"second\" | \"minute\" | \"hour\" | \"day\" | \"month\" | \"year\" | \"week\" | \"millisecond\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "formatStyle",
        "type": "FormatStyle",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "noTitle",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "datetime",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "date",
        "type": "Date",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "connectedCallback",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "disconnectedCallback",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "attributeChangedCallback",
        "type": "(attrName: string, oldValue: unknown, newValue: unknown) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "update",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SegmentedControl/SegmentedControl.tsx",
    "id": "segmented_control",
    "description": "Segmented control is used to pick one choice from a linear set of closely related choices, and immediately apply that selection.",
    "name": "SegmentedControl",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-label",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "fullWidth",
        "type": "boolean | ResponsiveValue<boolean>",
        "required": false,
        "description": "Whether the control fills the width of its parent",
        "defaultValue": null
      },
      {
        "name": "onChange",
        "type": "(selectedIndex: number) => void",
        "required": false,
        "description": "The handler that gets called when a segment is selected",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "\"small\" | \"medium\"",
        "required": false,
        "description": "The size of the buttons",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"default\" | Partial<Record<WidthOnlyViewportRangeKeys, \"default\" | \"hideLabels\" | \"dropdown\">>",
        "required": false,
        "description": "Configure alternative ways to render the control when it gets rendered in tight spaces",
        "defaultValue": "default"
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SegmentedControl/SegmentedControlButton.tsx",
        "description": "A button segment in the SegmentedControl",
        "name": "SegmentedControl.Button",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "children",
            "type": "string & ReactNode",
            "required": false,
            "description": "The visible label rendered in the button",
            "defaultValue": null
          },
          {
            "name": "selected",
            "type": "boolean",
            "required": false,
            "description": "Whether the segment is selected. This is used for controlled `SegmentedControls`, and needs to be updated using the `onChange` handler on `SegmentedControl`.",
            "defaultValue": null
          },
          {
            "name": "defaultSelected",
            "type": "boolean",
            "required": false,
            "description": "Whether the segment is selected. This is used for uncontrolled `SegmentedControls` to pick one `SegmentedControlButton` that is selected on the initial render.",
            "defaultValue": null
          },
          {
            "name": "leadingIcon",
            "type": "React.FunctionComponent<React.PropsWithChildren<IconProps>>",
            "required": false,
            "description": "The leading icon comes before item label",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SegmentedControl/SegmentedControlIconButton.tsx",
        "description": "A button segment in the SegmentedControl",
        "name": "SegmentedControl.IconButton",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "string",
            "required": false,
            "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "React.FunctionComponent<React.PropsWithChildren<IconProps>>",
            "required": true,
            "description": "The icon that represents the segmented control item",
            "defaultValue": null
          },
          {
            "name": "selected",
            "type": "boolean",
            "required": false,
            "description": "Whether the segment is selected. This is used for controlled SegmentedControls, and needs to be updated using the onChange handler on SegmentedControl.",
            "defaultValue": null
          },
          {
            "name": "defaultSelected",
            "type": "boolean",
            "required": false,
            "description": "Whether the segment is selected. This is used for uncontrolled SegmentedControls to pick one SegmentedControlButton that is selected on the initial render.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Select/Select.tsx",
    "id": "select",
    "description": "Select is an input for selecting a single option from a menu.",
    "name": "Select",
    "status": "alpha",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is styled to look disabled.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "TextInputSizes",
        "required": false,
        "description": "The size of the input.",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Whether the input takes up the full width of its parent",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": false,
        "description": "Whether the text rendered in the input is in a monospace font.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "Whether the background color of the input has contrast against the default background color.",
        "defaultValue": null
      },
      {
        "name": "hasTrailingAction",
        "type": "boolean",
        "required": false,
        "description": "Whether the input has a trailing action.",
        "defaultValue": null
      },
      {
        "name": "isInputFocused",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is focused.",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "The result of validation on the input.",
        "defaultValue": null
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": "Text to show in a Select when no option is selected.",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Select/Select.tsx",
        "description": "A selectable option in the Select component.",
        "name": "Select.Option",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "value",
            "type": "string | (readonly string[] & string)",
            "required": false,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Select/Select.tsx",
        "description": "Creates a group of related selectable options in the Select component.",
        "name": "Select.OptGroup",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SelectPanel/SelectPanel.tsx",
    "id": "select_panel",
    "description": "Select panel is a semantic dialog that allows for complex selection options within an overlay.",
    "docsId": "select_panel",
    "name": "SelectPanel",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "title",
        "type": "any",
        "required": false,
        "description": "A descriptive title for the panel",
        "defaultValue": "isMultiSelectVariant(selected) ? 'Select items' : 'Select an item'"
      },
      {
        "name": "subtitle",
        "type": "any",
        "required": false,
        "description": "When provided, a subtitle is displayed below the title",
        "defaultValue": null
      },
      {
        "name": "onOpenChange",
        "type": "(open: boolean, gesture: \"anchor-click\" | \"anchor-key-press\" | \"click-outside\" | \"escape\" | \"selection\") => void",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": "Text used in anchor when there are no selected items",
        "defaultValue": null
      },
      {
        "name": "inputLabel",
        "type": "string",
        "required": false,
        "description": "The aria-label for the filter input",
        "defaultValue": "Filter items"
      },
      {
        "name": "overlayProps",
        "type": "Partial<Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"ref\"> & { ...; }, \"style\" | ... 8 more ... | keyof BaseOverlayProps> & Omit<...> & BaseOverlayProps & { ...; }>",
        "required": false,
        "description": "See [Overlay props](/react/Overlay#props)",
        "defaultValue": null
      },
      {
        "name": "footer",
        "type": "any",
        "required": false,
        "description": "Footer rendered at the end of the panel",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "id to attach to the base DOM node of the list",
        "defaultValue": null
      },
      {
        "name": "role",
        "type": "AriaRole",
        "required": false,
        "description": "The ARIA role describing the function of `List` component. `listbox` is a common value.",
        "defaultValue": null
      },
      {
        "name": "loading",
        "type": "boolean",
        "required": false,
        "description": "Whether the items are loading",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"inset\" | \"full\"",
        "required": false,
        "description": "Style variations. Usage is discretionary.\n\n- `\"inset\"` - `List` children are offset (vertically and horizontally) from `List`’s edges\n- `\"full\"` - `List` children are flush (vertically and horizontally) with `List` edges",
        "defaultValue": null
      },
      {
        "name": "items",
        "type": "ItemInput[]",
        "required": true,
        "description": "A collection of `Item` props and `Item`-level custom `Item` renderers.",
        "defaultValue": null
      },
      {
        "name": "renderItem",
        "type": "RenderItemFn",
        "required": false,
        "description": "A `List`-level custom `Item` renderer. Every `Item` within this `List`\nwithout a `Group`-level or `Item`-level custom `Item` renderer will be\nrendered using this function component.",
        "defaultValue": null
      },
      {
        "name": "renderGroup",
        "type": "({ header, items, ...props }: GroupProps) => Element",
        "required": false,
        "description": "A `List`-level custom `Group` renderer. Every `Group` within this `List`\nwithout a `Group`-level custom `Item` renderer will be rendered using\nthis function component.",
        "defaultValue": null
      },
      {
        "name": "showItemDividers",
        "type": "boolean",
        "required": false,
        "description": "Whether to display a divider above each `Item` in this `List` when it does not follow a `Header` or `Divider`.",
        "defaultValue": null
      },
      {
        "name": "groupMetadata",
        "type": "((Omit<GroupProps, \"items\"> | Omit<Partial<GroupProps> & { renderItem?: RenderItemFn; renderGroup?: ({ header, items, ...props }: GroupProps) => Element; }, \"items\">) & { ...; })[]",
        "required": false,
        "description": "A collection of `Group` props (except `items`), plus a unique group identifier\nand `Group`-level custom `Item` or `Group` renderers.",
        "defaultValue": null
      },
      {
        "name": "placeholderText",
        "type": "string",
        "required": false,
        "description": "Text used as placeholder for search input",
        "defaultValue": "Filter items"
      },
      {
        "name": "filterValue",
        "type": "string",
        "required": false,
        "description": "The current value of the search input",
        "defaultValue": null
      },
      {
        "name": "onFilterChange",
        "type": "(value: string, e: React.ChangeEvent<HTMLInputElement>) => void",
        "required": true,
        "description": "Callback when the search input changes",
        "defaultValue": null
      },
      {
        "name": "textInputProps",
        "type": "Partial<Omit<TextInputProps, \"onChange\">>",
        "required": false,
        "description": "Props to pass through to the search input",
        "defaultValue": null
      },
      {
        "name": "inputRef",
        "type": "React.RefObject<HTMLInputElement>",
        "required": false,
        "description": "Ref to pass through to the search input",
        "defaultValue": null
      },
      {
        "name": "open",
        "type": "boolean",
        "required": true,
        "description": "Determines whether the overlay portion of the component should be shown or not",
        "defaultValue": null
      },
      {
        "name": "renderAnchor",
        "type": "<T extends React.HTMLAttributes<HTMLElement>>(props: T) => Element",
        "required": false,
        "description": "A custom function component used to render the anchor element.\nWhen renderAnchor is null, an anchorRef is required.\nA custom function component used to render the anchor element.\nWill receive the selected text as `children` prop when an item is activated.",
        "defaultValue": "props => {\n    const {children, ...rest} = props\n    return (\n      <Button trailingAction={TriangleDownIcon} {...rest}>\n        {children}\n      </Button>\n    )\n  }"
      },
      {
        "name": "anchorRef",
        "type": "any",
        "required": false,
        "description": "An override to the internal renderAnchor ref that will be used to position the overlay.\nWhen renderAnchor is null this can be used to make an anchor that is detached from ActionMenu.\nAn override to the internal ref that will be spread on to the renderAnchor",
        "defaultValue": null
      },
      {
        "name": "anchorId",
        "type": "string",
        "required": false,
        "description": "An override to the internal id that will be spread on to the renderAnchor",
        "defaultValue": null
      },
      {
        "name": "selected",
        "type": "ItemInput | ItemInput[]",
        "required": true,
        "description": "Specify the selected items\nSpecify the selected item",
        "defaultValue": null
      },
      {
        "name": "onSelectedChange",
        "type": "((selected: ItemInput) => void) | ((selected: ItemInput[]) => void)",
        "required": true,
        "description": "Provide a callback called when the selected item changes\nProvide a callback called when the selected items change",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Spinner/Spinner.tsx",
    "description": "",
    "name": "Spinner",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-label",
        "type": "string",
        "required": false,
        "description": "@deprecated Use `srText` instead.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "Sets the width and height of the spinner.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "srText",
        "type": "string",
        "required": false,
        "description": "Sets the text conveyed by assistive technologies such as screen readers. Set to `null` if the loading state is displayed in a text node somewhere else on the page.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SplitPageLayout/SplitPageLayout.tsx",
    "id": "split_page_layout",
    "description": "Split page layout is an abstraction for using the PageLayout component to provide structure for a split layout.",
    "name": "SplitPageLayout",
    "status": "alpha",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SplitPageLayout/SplitPageLayout.tsx",
        "description": "The header area of the overall page layout.",
        "name": "SplitPageLayout.Header",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "A unique label for the rendered banner landmark",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "An id to an element which uniquely labels the rendered banner landmark",
            "defaultValue": null
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "",
            "defaultValue": "normal"
          },
          {
            "name": "divider",
            "type": "\"line\" | \"none\" | ResponsiveValue<\"line\" | \"none\", \"line\" | \"none\" | \"filled\">",
            "required": false,
            "description": "",
            "defaultValue": "line"
          },
          {
            "name": "dividerWhenNarrow",
            "type": "\"line\" | \"inherit\" | \"none\" | \"filled\"",
            "required": false,
            "description": "@deprecated Use the `divider` prop with a responsive value instead.\n\nBefore:\n```\ndivider=\"line\"\ndividerWhenNarrow=\"filled\"\n```\n\nAfter:\n```\ndivider={{regular: 'line', narrow: 'filled'}}\n```",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SplitPageLayout/SplitPageLayout.tsx",
        "description": "The main content area.",
        "name": "SplitPageLayout.Content",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "React.ElementType",
            "required": false,
            "description": "Provide an optional element type for the outermost element rendered by the component.",
            "defaultValue": "'main'"
          },
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "A unique label for the rendered main landmark",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "An id to an element which uniquely labels the rendered main landmark",
            "defaultValue": null
          },
          {
            "name": "width",
            "type": "\"large\" | \"medium\" | \"full\" | \"xlarge\"",
            "required": false,
            "description": "The maximum width of the content region.",
            "defaultValue": "large"
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "The amount of padding inside the content.",
            "defaultValue": "normal"
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SplitPageLayout/SplitPageLayout.tsx",
        "description": "By default, it is a sidebar that sticks on the left used for navigating to update the main content area.",
        "name": "SplitPageLayout.Pane",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "position",
            "type": "\"end\" | \"start\" | ResponsiveValue<\"end\" | \"start\">",
            "required": false,
            "description": "Which side of the page the pane should be on. Can be changed for different viewport widths.",
            "defaultValue": "start"
          },
          {
            "name": "positionWhenNarrow",
            "type": "\"end\" | \"start\" | \"inherit\"",
            "required": false,
            "description": "@deprecated Use the `position` prop with a responsive value instead.\n\nBefore:\n```\nposition=\"start\"\npositionWhenNarrow=\"end\"\n```\n\nAfter:\n```\nposition={{regular: 'start', narrow: 'end'}}\n```",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "string",
            "required": false,
            "description": "Id of an element that acts as a label for the pane. Required if the pane overflows and doesn't have aria-label.",
            "defaultValue": null
          },
          {
            "name": "aria-label",
            "type": "string",
            "required": false,
            "description": "Label for the pane. Required if the pane overflows and doesn't have aria-labelledby.",
            "defaultValue": null
          },
          {
            "name": "width",
            "type": "\"small\" | \"large\" | \"medium\" | CustomWidthOptions",
            "required": false,
            "description": "The width of the pane. If using custom widths, provide an object with keys 'min', 'max' and 'default'.",
            "defaultValue": "large"
          },
          {
            "name": "minWidth",
            "type": "number",
            "required": false,
            "description": "The minimum width of the pane.",
            "defaultValue": "256"
          },
          {
            "name": "resizable",
            "type": "boolean",
            "required": false,
            "description": "When true, the pane may be resized by the user.",
            "defaultValue": null
          },
          {
            "name": "widthStorageKey",
            "type": "string",
            "required": false,
            "description": "Provide a key used by localStorage to persist the size of the pane on the client.",
            "defaultValue": "paneWidth"
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "The amount of padding inside the pane.",
            "defaultValue": "normal"
          },
          {
            "name": "divider",
            "type": "\"line\" | \"none\" | ResponsiveValue<\"line\" | \"none\", \"line\" | \"none\" | \"filled\">",
            "required": false,
            "description": "The divider style between the pane and the content region.",
            "defaultValue": "line"
          },
          {
            "name": "dividerWhenNarrow",
            "type": "\"line\" | \"inherit\" | \"none\" | \"filled\"",
            "required": false,
            "description": "@deprecated Use the `divider` prop with a responsive value instead.\n\nBefore:\n```\ndivider=\"line\"\ndividerWhenNarrow=\"filled\"\n```\n\nAfter:\n```\ndivider={{regular: 'line', narrow: 'filled'}}\n```",
            "defaultValue": null
          },
          {
            "name": "sticky",
            "type": "boolean",
            "required": false,
            "description": "Whether the pane should stick to the top of the screen while the content scrolls.",
            "defaultValue": true
          },
          {
            "name": "offsetHeader",
            "type": "string | number",
            "required": false,
            "description": "Use offsetHeader along with the sticky prop to push the sticky pane down to make room for a sticky header if necessary. Use the type `string` to specify the height with a unit i.e. 5rem; otherwise the type `number` will be taken as px.",
            "defaultValue": "0"
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether the pane is hidden. Can be changed for different viewport widths.",
            "defaultValue": null
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "May be used to override the default ID passed to the pane element.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SplitPageLayout/SplitPageLayout.tsx",
        "description": "The footer area of the overall page layout.",
        "name": "SplitPageLayout.Footer",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "A unique label for the rendered contentinfo landmark",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "React.AriaAttributes",
            "required": false,
            "description": "An id to an element which uniquely labels the rendered contentinfo landmark",
            "defaultValue": null
          },
          {
            "name": "padding",
            "type": "\"normal\" | \"none\" | \"condensed\"",
            "required": false,
            "description": "The amount of padding inside the footer.",
            "defaultValue": "normal"
          },
          {
            "name": "divider",
            "type": "\"line\" | \"none\" | ResponsiveValue<\"line\" | \"none\", \"line\" | \"none\" | \"filled\">",
            "required": false,
            "description": "The divider style between the footer and the content region. Can be changed for different viewport widths.",
            "defaultValue": "line"
          },
          {
            "name": "dividerWhenNarrow",
            "type": "\"line\" | \"inherit\" | \"none\" | \"filled\"",
            "required": false,
            "description": "@deprecated Use the `divider` prop with a responsive value instead.\n\nBefore:\n```\ndivider=\"line\"\ndividerWhenNarrow=\"filled\"\n```\n\nAfter:\n```\ndivider={{regular: 'line', narrow: 'filled'}}\n```",
            "defaultValue": null
          },
          {
            "name": "hidden",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Whether the footer is hidden.  Can be changed for different viewport widths.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Stack/Stack.tsx",
    "id": "stack",
    "description": "Stack is a layout component that creates responsive horizontal and vertical flows.",
    "name": "Stack",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "ElementType",
        "required": false,
        "description": "Customize the element type of the rendered container",
        "defaultValue": null
      },
      {
        "name": "gap",
        "type": "Gap",
        "required": false,
        "description": "Specify the gap between children elements in the stack",
        "defaultValue": null
      },
      {
        "name": "direction",
        "type": "Direction",
        "required": false,
        "description": "Specify the direction for the stack container",
        "defaultValue": "vertical"
      },
      {
        "name": "align",
        "type": "Align",
        "required": false,
        "description": "Specify the alignment between items in the cross-axis of the direction",
        "defaultValue": "stretch"
      },
      {
        "name": "wrap",
        "type": "Wrap",
        "required": false,
        "description": "Specify whether items are forced onto one line or can wrap onto multiple lines",
        "defaultValue": "nowrap"
      },
      {
        "name": "justify",
        "type": "Justify",
        "required": false,
        "description": "Specify how items will be distributed in the stacking direction",
        "defaultValue": "start"
      },
      {
        "name": "padding",
        "type": "Padding",
        "required": false,
        "description": "Specify the padding of the stack container",
        "defaultValue": "none"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Stack/Stack.tsx",
        "description": "A child to lay out in the Stack",
        "name": "Stack.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "ElementType",
            "required": false,
            "description": "Customize the element type of the rendered container",
            "defaultValue": null
          },
          {
            "name": "grow",
            "type": "boolean | ResponsiveValue<boolean>",
            "required": false,
            "description": "Allow item to keep size or expand to fill the available space",
            "defaultValue": false
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/StateLabel/StateLabel.tsx",
    "id": "state_label",
    "description": "State label is used for rendering the status of an item.",
    "name": "StateLabel",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "status",
        "type": "\"unavailable\" | \"issueClosed\" | \"issueClosedNotPlanned\" | \"pullClosed\" | \"pullMerged\" | \"pullQueued\" | \"issueOpened\" | \"pullOpened\" | \"draft\" | \"issueDraft\"",
        "required": true,
        "description": "Kind of status the label represents",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"normal\"",
        "required": false,
        "description": "Size variant",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SubNav/SubNav.tsx",
    "id": "sub_nav",
    "description": "Use the sub nav component for navigation on a dashboard-type interface with another set of navigation components above it.",
    "name": "SubNav",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "actions",
        "type": "React.ReactNode",
        "required": false,
        "description": "Place another element, such as a button, to the opposite side of the navigation items.",
        "defaultValue": null
      },
      {
        "name": "align",
        "type": "\"right\"",
        "required": false,
        "description": "Use `right` to have navigation items aligned right.",
        "defaultValue": null
      },
      {
        "name": "full",
        "type": "boolean",
        "required": false,
        "description": "Used to make navigation fill the width of the container.",
        "defaultValue": null
      },
      {
        "name": "label",
        "type": "string",
        "required": false,
        "description": "Used to set the `aria-label` on the top level `<nav>` element.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SubNav/SubNav.tsx",
        "description": "Container for the set of links in the SubNav.",
        "name": "SubNav.Links",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/SubNav/SubNav.tsx",
        "description": "An individual link in the SubNav.",
        "name": "SubNav.Link",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "to",
            "type": "To",
            "required": false,
            "description": "Used when the item is rendered using a component like React Router's `Link`. The path to navigate to.",
            "defaultValue": null
          },
          {
            "name": "selected",
            "type": "boolean",
            "required": false,
            "description": "Whether this item represents the current page",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TabNav/TabNav.tsx",
    "description": "",
    "name": "TabNav.Link",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TestComponent/TestComponent.tsx",
    "description": "",
    "name": "TestComponentWithForwardRef",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "The name of the thing",
        "defaultValue": "Mona"
      },
      {
        "name": "color",
        "type": "\"blue\" | \"green\" | \"red\"",
        "required": false,
        "description": "The color of the thing",
        "defaultValue": "blue"
      },
      {
        "name": "metadata",
        "type": "{ age: number; location: string; }",
        "required": false,
        "description": "Metadata about the thing",
        "defaultValue": null
      },
      {
        "name": "order",
        "type": "number",
        "required": false,
        "description": "The order of the thing",
        "defaultValue": 0
      },
      {
        "name": "isReal",
        "type": "boolean",
        "required": false,
        "description": "Whether the thing is real",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TestComponent/TestComponent.tsx",
    "description": "",
    "name": "TestComponent",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "The name of the thing",
        "defaultValue": "Mona"
      },
      {
        "name": "color",
        "type": "\"blue\" | \"green\" | \"red\"",
        "required": false,
        "description": "The color of the thing",
        "defaultValue": "blue"
      },
      {
        "name": "metadata",
        "type": "{ age: number; location: string; }",
        "required": false,
        "description": "Metadata about the thing",
        "defaultValue": null
      },
      {
        "name": "order",
        "type": "number",
        "required": false,
        "description": "The order of the thing",
        "defaultValue": 0
      },
      {
        "name": "isReal",
        "type": "boolean",
        "required": false,
        "description": "Whether the thing is real",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Text/Text.tsx",
    "id": "text",
    "description": "Text styles a string.",
    "name": "Text",
    "status": "alpha",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "whiteSpace",
        "type": "\"pre\" | \"normal\" | \"nowrap\" | \"pre-wrap\" | \"pre-line\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TextInput/TextInput.tsx",
    "id": "text_input",
    "description": "Text input is used to set a value that is a single line of text.",
    "name": "TextInput",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TextInput/TextInputInnerAction.tsx",
        "description": "An action button that can be used inside a `TextInput` component.",
        "name": "TextInput.Action",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "children",
            "type": "any",
            "required": false,
            "description": "@deprecated Text input action buttons should only use icon buttons",
            "defaultValue": null
          },
          {
            "name": "aria-label",
            "type": "string",
            "required": false,
            "description": "Text that appears in a tooltip. If an icon is passed, this is also used as the label used by assistive technologies.",
            "defaultValue": null
          },
          {
            "name": "tooltipDirection",
            "type": "\"s\" | \"nw\" | \"n\" | \"ne\" | \"e\" | \"se\" | \"sw\" | \"w\"",
            "required": false,
            "description": "Position of tooltip. If no position is passed or defaults to \"n\"",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "FunctionComponent<PropsWithChildren<IconProps>>",
            "required": false,
            "description": "The icon to render inside the button",
            "defaultValue": null
          },
          {
            "name": "variant",
            "type": "VariantType",
            "required": false,
            "description": "@deprecated Text input action buttons should only use the 'invisible' button variant\nDetermine's the styles on a button one of 'default' | 'primary' | 'invisible' | 'danger'",
            "defaultValue": "invisible"
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TextInputWithTokens/TextInputWithTokens.tsx",
    "id": "text_input_with_tokens",
    "description": "Text input with tokens is an input for a value that is a list.",
    "name": "TextInputWithTokens",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "tokens",
        "type": "any[] | (Omit<(Omit<DetailedHTMLProps<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, \"ref\"> & { ...; }) | (Omit<...> & { ...; }) | (Omit<...> & { ...; }), keyof TokenProps> & TokenProps & { ...; })[]",
        "required": true,
        "description": "The array of tokens to render",
        "defaultValue": null
      },
      {
        "name": "onTokenRemove",
        "type": "(tokenId: string | number) => void",
        "required": true,
        "description": "The function that gets called when a token is removed",
        "defaultValue": null
      },
      {
        "name": "tokenComponent",
        "type": "AnyReactComponent | ForwardRefComponent<\"a\" | \"button\" | \"span\", TokenProps>",
        "required": false,
        "description": "The component used to render each token",
        "defaultValue": "Token"
      },
      {
        "name": "maxHeight",
        "type": "MaxHeight<string | number>",
        "required": false,
        "description": "The maximum height of the component. If the content in the input exceeds this height,\nit will scroll vertically",
        "defaultValue": null
      },
      {
        "name": "preventTokenWrapping",
        "type": "boolean",
        "required": false,
        "description": "Whether tokens should render inline horizontally. By default, tokens wrap to new lines.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "TokenSizeKeys",
        "required": false,
        "description": "The size of the tokens and text input",
        "defaultValue": "xlarge"
      },
      {
        "name": "hideTokenRemoveButtons",
        "type": "boolean",
        "required": false,
        "description": "Whether the remove buttons should be rendered in the tokens",
        "defaultValue": null
      },
      {
        "name": "visibleTokenCount",
        "type": "number",
        "required": false,
        "description": "The number of tokens to display before truncating",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is styled to look disabled.",
        "defaultValue": null
      },
      {
        "name": "loading",
        "type": "boolean",
        "required": false,
        "description": "Whether the to show a loading indicator in the input",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Whether the input takes up the full width of its parent",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": false,
        "description": "Whether the text rendered in the input is in a monospace font.",
        "defaultValue": null
      },
      {
        "name": "icon",
        "type": "React.ElementType",
        "required": false,
        "description": "@deprecated Use `leadingVisual` or `trailingVisual` prop instead",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "TextInputSizes",
        "required": false,
        "description": "@deprecated Use `size` prop instead",
        "defaultValue": null
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "Whether the background color of the input has contrast against the default background color.",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "The result of validation on the input.",
        "defaultValue": null
      },
      {
        "name": "leadingVisual",
        "type": "any",
        "required": false,
        "description": "A visual that renders inside the input before the typing area",
        "defaultValue": null
      },
      {
        "name": "trailingVisual",
        "type": "any",
        "required": false,
        "description": "A visual that renders inside the input after the typing area",
        "defaultValue": null
      },
      {
        "name": "trailingAction",
        "type": "React.ReactElement<React.HTMLProps<HTMLButtonElement>>",
        "required": false,
        "description": "A visual that renders inside the input after the typing area",
        "defaultValue": null
      },
      {
        "name": "loaderPosition",
        "type": "\"auto\" | \"leading\" | \"trailing\"",
        "required": false,
        "description": "Which position to render the loading indicator\n'auto' (default): at the end of the input, unless a `leadingVisual` is passed. Then, it will render at the beginning\n'leading': at the beginning of the input\n'trailing': at the end of the input",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Textarea/Textarea.tsx",
    "id": "textarea",
    "description": "An accessible, native textarea component that supports validation states.\nThis component accepts all native HTML <textarea> attributes as props.",
    "name": "Textarea",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Apply inactive visual appearance to the Textarea",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "Indicates whether the Textarea validation state",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Expands with width of the component to fill the parent elements",
        "defaultValue": null
      },
      {
        "name": "resize",
        "type": "\"vertical\" | \"none\" | \"both\" | \"horizontal\"",
        "required": false,
        "description": "Allows resizing of the textarea",
        "defaultValue": "both"
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "apply a high contrast color to background",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Timeline/Timeline.tsx",
    "id": "timeline",
    "description": "The timeline component is used to display items on a vertical timeline, connected by timeline elements.",
    "name": "Timeline",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "clipSidebar",
        "type": "boolean",
        "required": false,
        "description": "Hides the sidebar above the first Timeline.Item and below the last Timeline.Item.",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Timeline/Timeline.tsx",
        "description": "An individual item on a timeline.",
        "name": "Timeline.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "condensed",
            "type": "boolean",
            "required": false,
            "description": "Reduces vertical padding and removes background from an item's badge.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Timeline/Timeline.tsx",
        "description": "The \"badge\" that prepends a timeline item's body content.",
        "name": "Timeline.Badge",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Timeline/Timeline.tsx",
        "description": "A timeline item's body content.",
        "name": "Timeline.Body",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Timeline/Timeline.tsx",
        "description": "A visual break in the timeline.",
        "name": "Timeline.Break",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/ToggleSwitch/ToggleSwitch.tsx",
    "id": "toggle_switch",
    "description": "Toggle switch is used to immediately toggle a setting on or off.",
    "name": "ToggleSwitch",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-describedby",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "The ID(s) of the DOM node(s) that describes the switch",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "The ID of the DOM node that labels the switch",
        "defaultValue": null
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "required": false,
        "description": "Uncontrolled - whether the switch is turned on",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the switch is ready for user input",
        "defaultValue": null
      },
      {
        "name": "loading",
        "type": "boolean",
        "required": false,
        "description": "Whether the switch's value is being calculated",
        "defaultValue": null
      },
      {
        "name": "checked",
        "type": "boolean",
        "required": false,
        "description": "Whether the switch is turned on",
        "defaultValue": null
      },
      {
        "name": "onChange",
        "type": "(checked: boolean) => void",
        "required": false,
        "description": "The callback that is called when the switch is toggled on or off",
        "defaultValue": null
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler",
        "required": false,
        "description": "The callback that is called when the switch is clicked",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "\"small\" | \"medium\"",
        "required": false,
        "description": "Size of the switch",
        "defaultValue": null
      },
      {
        "name": "statusLabelPosition",
        "type": "CellAlignment",
        "required": false,
        "description": "Whether the \"on\" and \"off\" labels should appear before or after the switch.\n**This should only be changed when the switch's alignment needs to be adjusted.** For example: It needs to be left-aligned because the label appears above it and the caption appears below it.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Token/TokenBase.tsx",
    "description": "",
    "name": "isTokenInteractive",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether or not the token is disabled (non-interactive).",
        "defaultValue": null
      },
      {
        "name": "as",
        "type": "\"a\" | \"button\" | \"span\"",
        "required": false,
        "description": "",
        "defaultValue": "span"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Token/_RemoveTokenButton.tsx",
    "description": "",
    "name": "RemoveTokenButton",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "TokenSizeKeys",
        "required": false,
        "description": "",
        "defaultValue": "medium"
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "borderOffset",
        "type": "number",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "isParentInteractive",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Token/_TokenTextContainer.tsx",
    "description": "",
    "name": "TokenTextContainer",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "text",
        "type": "React.ReactNode",
        "required": false,
        "description": "The text label inside the token",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "A unique identifier that can be associated with the token",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether or not the token is disabled (non-interactive).",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "TokenSizeKeys",
        "required": false,
        "description": "Which size the token will be rendered at",
        "defaultValue": null
      },
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onRemove",
        "type": "() => void",
        "required": false,
        "description": "The function that gets called when a user clicks the remove button, or keys \"Backspace\" or \"Delete\" when focused on the token",
        "defaultValue": null
      },
      {
        "name": "hideRemoveButton",
        "type": "boolean",
        "required": false,
        "description": "Whether the remove button should be rendered in the token",
        "defaultValue": null
      },
      {
        "name": "isSelected",
        "type": "boolean",
        "required": false,
        "description": "Whether the token is selected",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/Tooltip/Tooltip.tsx",
    "id": "tooltip",
    "description": "Tooltips add additional context to interactive UI elements and appear on mouse hover or keyboard focus.",
    "docsId": "tooltip",
    "name": "Tooltip",
    "status": "alpha",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "direction",
        "type": "\"s\" | \"nw\" | \"n\" | \"ne\" | \"e\" | \"se\" | \"sw\" | \"w\"",
        "required": false,
        "description": "Sets where the tooltip renders in relation to the target.",
        "defaultValue": "n"
      },
      {
        "name": "text",
        "type": "string",
        "required": false,
        "description": "Text content of the tooltip. Also used as an aria-label.",
        "defaultValue": null
      },
      {
        "name": "noDelay",
        "type": "boolean",
        "required": false,
        "description": "When set to `true`, tooltip appears without any delay.",
        "defaultValue": null
      },
      {
        "name": "align",
        "type": "\"left\" | \"right\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "wrap",
        "type": "boolean",
        "required": false,
        "description": "Use `true` to allow text within tooltip to wrap.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TooltipV2/Tooltip.tsx",
    "id": "tooltip_v2",
    "description": "Tooltips add additional context to interactive UI elements and appear on mouse hover or keyboard focus.",
    "docsId": "tooltip",
    "name": "Tooltip",
    "status": "beta",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/TreeView/TreeView.tsx",
    "description": "",
    "name": "TreeView",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-label",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "flat",
        "type": "boolean",
        "required": false,
        "description": "Prevents the tree from indenting items. This should only be used when the tree is used to display a flat list of items.",
        "defaultValue": null
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Class name(s) used to customize styles",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/UnderlineNav/UnderlineNav.tsx",
    "description": "",
    "name": "NavigationList",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/UnderlineNav/UnderlineNav.tsx",
    "description": "",
    "name": "MoreMenuListItem",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/UnderlineNav/UnderlineNav.tsx",
    "description": "",
    "name": "getValidChildren",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/UnderlineNav/UnderlineNav.tsx",
    "id": "underline_nav",
    "description": "The underline nav is used to display navigation in a horizontal tabbed format.",
    "name": "UnderlineNav",
    "status": "beta",
    "a11yReviewed": true,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-label",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "A unique name for the rendered 'nav' landmark. It will also be used to label the arrow\\nbuttons that control the scroll behaviour on coarse pointer devices. (I.e.\\n'Scroll ${aria-label} left/right')\\n",
        "defaultValue": null
      },
      {
        "name": "as",
        "type": "React.ElementType",
        "required": false,
        "description": "",
        "defaultValue": "nav"
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "loadingCounters",
        "type": "boolean",
        "required": false,
        "description": "Whether the navigation items are in loading state. Component waits for all the counters to finish loading to prevent multiple layout shifts.",
        "defaultValue": false
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/UnderlineNav/UnderlineNavItem.tsx",
        "description": "A link in the UnderlineNav",
        "name": "UnderlineNav.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "any",
            "required": false,
            "description": "Renders `UnderlineNav.Item` as given component i.e. react-router's Link",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionMenu.tsx",
    "description": "",
    "name": "ActionMenu.Item",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "anchorContent",
        "type": "React.ReactNode",
        "required": false,
        "description": "Content that is passed into the renderAnchor component, which is a button by default.",
        "defaultValue": null
      },
      {
        "name": "onAction",
        "type": "(props: ItemProps, event?: any) => void",
        "required": false,
        "description": "A callback that triggers both on clicks and keyboard events. This callback will be overridden by item level `onAction` callbacks.",
        "defaultValue": null
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "If defined, will control the open/closed state of the overlay. Must be used in conjuction with `setOpen`.",
        "defaultValue": null
      },
      {
        "name": "setOpen",
        "type": "(s: boolean) => void",
        "required": false,
        "description": "If defined, will control the open/closed state of the overlay. Must be used in conjuction with `open`.",
        "defaultValue": null
      },
      {
        "name": "overlayProps",
        "type": "Partial<Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"ref\"> & { ...; }, \"style\" | ... 8 more ... | keyof BaseOverlayProps> & Omit<...> & BaseOverlayProps & { ...; }>",
        "required": false,
        "description": "Props to be spread on the internal `Overlay` component.",
        "defaultValue": null
      },
      {
        "name": "groupMetadata",
        "type": "((Omit<GroupProps, \"items\"> | Omit<Partial<GroupProps> & { renderItem?: RenderItemFn; renderGroup?: ({ header, items, ...props }: GroupProps) => Element; }, \"items\">) & { ...; })[]",
        "required": false,
        "description": "A collection of `Group` props (except `items`), plus a unique group identifier\nand `Group`-level custom `Item` or `Group` renderers.",
        "defaultValue": null
      },
      {
        "name": "items",
        "type": "ItemInput[]",
        "required": true,
        "description": "A collection of `Item` props and `Item`-level custom `Item` renderers.",
        "defaultValue": null
      },
      {
        "name": "role",
        "type": "AriaRole",
        "required": false,
        "description": "The ARIA role describing the function of `List` component. `listbox` is a common value.",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "id to attach to the base DOM node of the list",
        "defaultValue": null
      },
      {
        "name": "renderItem",
        "type": "RenderItemFn",
        "required": false,
        "description": "A `List`-level custom `Item` renderer. Every `Item` within this `List`\nwithout a `Group`-level or `Item`-level custom `Item` renderer will be\nrendered using this function component.",
        "defaultValue": null
      },
      {
        "name": "renderGroup",
        "type": "({ header, items, ...props }: GroupProps) => Element",
        "required": false,
        "description": "A `List`-level custom `Group` renderer. Every `Group` within this `List`\nwithout a `Group`-level custom `Item` renderer will be rendered using\nthis function component.",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"inset\" | \"full\"",
        "required": false,
        "description": "Style variations. Usage is discretionary.\n\n- `\"inset\"` - `List` children are offset (vertically and horizontally) from `List`’s edges\n- `\"full\"` - `List` children are flush (vertically and horizontally) with `List` edges",
        "defaultValue": null
      },
      {
        "name": "selectionVariant",
        "type": "\"multiple\" | \"single\"",
        "required": false,
        "description": "For `Item`s which can be selected, whether `multiple` `Item`s or a `single` `Item` can be selected",
        "defaultValue": null
      },
      {
        "name": "showItemDividers",
        "type": "boolean",
        "required": false,
        "description": "Whether to display a divider above each `Item` in this `List` when it does not follow a `Header` or `Divider`.",
        "defaultValue": null
      },
      {
        "name": "renderAnchor",
        "type": "<T extends React.HTMLAttributes<HTMLElement>>(props: T) => Element",
        "required": false,
        "description": "A custom function component used to render the anchor element.\nWhen renderAnchor is null, an anchorRef is required.\nA custom function component used to render the anchor element.\nWill receive the selected text as `children` prop when an item is activated.",
        "defaultValue": "<T extends ButtonProps>(props: T) => <Button {...props} />"
      },
      {
        "name": "anchorRef",
        "type": "any",
        "required": false,
        "description": "An override to the internal renderAnchor ref that will be used to position the overlay.\nWhen renderAnchor is null this can be used to make an anchor that is detached from ActionMenu.\nAn override to the internal ref that will be spread on to the renderAnchor",
        "defaultValue": null
      },
      {
        "name": "anchorId",
        "type": "string",
        "required": false,
        "description": "An override to the internal id that will be spread on to the renderAnchor",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/hooks/useDetails.tsx",
    "description": "",
    "name": "useDetails",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "ref",
        "type": "RefObject<HTMLDetailsElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "closeOnOutsideClick",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onClickOutside",
        "type": "(event: MouseEvent) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/hooks/useMedia.tsx",
    "description": "`useMedia` will use the given `mediaQueryString` with `matchMedia` to\ndetermine if the document matches the media query string.\n\nIf `MatchMedia` is used as an ancestor, `useMedia` will instead use the\nvalue of the media query string, if available",
    "name": "useMedia",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/hooks/useMedia.tsx",
    "description": "Use `MatchMedia` to emulate media conditions by passing in feature\nqueries to the `features` prop. If a component uses `useMedia` with the\nfeature passed in to `MatchMedia` it will force its value to match what is\nprovided to `MatchMedia`\n\nThis should be used for development and documentation only in situations\nwhere devtools cannot emulate this feature",
    "name": "MatchMedia",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "features",
        "type": "MediaQueryFeatures",
        "required": false,
        "description": "",
        "defaultValue": "{}"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/hooks/useOnOutsideClick.tsx",
    "description": "",
    "name": "useOnOutsideClick",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "containerRef",
        "type": "any",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "ignoreClickRefs",
        "type": "React.RefObject<HTMLElement>[]",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onClickOutside",
        "type": "(e: TouchOrMouseEvent) => void",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/hooks/useOverlay.tsx",
    "description": "",
    "name": "useOverlay",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "ignoreClickRefs",
        "type": "RefObject<HTMLElement>[]",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "initialFocusRef",
        "type": "RefObject<HTMLElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "returnFocusRef",
        "type": "RefObject<HTMLElement>",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onEscape",
        "type": "(e: KeyboardEvent) => void",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onClickOutside",
        "type": "(e: TouchOrMouseEvent) => void",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "overlayRef",
        "type": "RefObject<HTMLDivElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "preventFocusOnOpen",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/live-region/Announce.tsx",
    "description": "`Announce` is a component that will announce the text content of the\n`children` passed in to screen readers using the given politeness level. It\nwill also announce any changes to the text content of `children`",
    "name": "Announce",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "announceOnShow",
        "type": "boolean",
        "required": false,
        "description": "Specify if the content of the element should be announced when this\ncomponent is rendered and is not hidden",
        "defaultValue": true
      },
      {
        "name": "hidden",
        "type": "boolean",
        "required": false,
        "description": "Specify if the element is hidden",
        "defaultValue": false
      },
      {
        "name": "delayMs",
        "type": "number",
        "required": false,
        "description": "Provide a delay in milliseconds before the announcement is made. This will\nonly work with `polite` announcements",
        "defaultValue": null
      },
      {
        "name": "politeness",
        "type": "\"assertive\" | \"polite\"",
        "required": false,
        "description": "The politeness level to use for the announcement",
        "defaultValue": "polite"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/live-region/AriaAlert.tsx",
    "description": "",
    "name": "AriaAlert",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "ElementType",
        "required": false,
        "description": "Customize the element type of the rendered container",
        "defaultValue": null
      },
      {
        "name": "announceOnShow",
        "type": "boolean",
        "required": false,
        "description": "Specify if the content of the element should be announced when this\ncomponent is rendered and is not hidden",
        "defaultValue": true
      },
      {
        "name": "hidden",
        "type": "boolean",
        "required": false,
        "description": "Specify if the element is hidden",
        "defaultValue": "false"
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/live-region/AriaStatus.tsx",
    "description": "",
    "name": "AriaStatus",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "ElementType",
        "required": false,
        "description": "Customize the element type of the rendered container",
        "defaultValue": null
      },
      {
        "name": "announceOnShow",
        "type": "boolean",
        "required": false,
        "description": "Specify if the content of the element should be announced when this\ncomponent is rendered and is not hidden",
        "defaultValue": false
      },
      {
        "name": "hidden",
        "type": "boolean",
        "required": false,
        "description": "Specify if the element is hidden",
        "defaultValue": "false"
      },
      {
        "name": "delayMs",
        "type": "number",
        "required": false,
        "description": "Provide a delay in milliseconds before the announcement is made",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/form-story-helpers.tsx",
    "description": "",
    "name": "getTextInputArgTypes",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/form-story-helpers.tsx",
    "description": "",
    "name": "getFormControlArgsByChildComponent",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the control allows user input",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "If true, the user must specify a value for the input before the owning form can be submitted",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "When `as` prop is 'label', it may be used to override the `htmlFor` given to the <label> element by FormControl's React Context.\nWhen 'as' prop is 'legend' or 'span', it is used as the `id` for the element.\nCustom ID to override the ID set by FormControl's React Context\nMay be used to override the ID assigned by FormControl's React Context",
        "defaultValue": null
      },
      {
        "name": "htmlFor",
        "type": "string",
        "required": false,
        "description": "The unique identifier for the associated input\nThis prop may be used to override the `htmlFor` set from FormControl's React Context.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "visuallyHidden",
        "type": "boolean",
        "required": false,
        "description": "Whether the label should be visually hidden",
        "defaultValue": "false"
      },
      {
        "name": "requiredText",
        "type": "string",
        "required": false,
        "description": "The text to display when the field is required",
        "defaultValue": "*"
      },
      {
        "name": "requiredIndicator",
        "type": "boolean",
        "required": false,
        "description": "Whether to show or hide the required text in the accessibility tree, the required text is still shown visually.",
        "defaultValue": "true"
      },
      {
        "name": "labelChildren",
        "type": "React.ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "captionChildren",
        "type": "React.ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "FormValidationStatus",
        "required": false,
        "description": "Changes the visual style to match the validation status",
        "defaultValue": null
      },
      {
        "name": "validationChildren",
        "type": "React.ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/isNumeric.tsx",
    "description": "",
    "name": "isNumeric",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/ssr.tsx",
    "description": "",
    "name": "SSRProvider",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/ssr.tsx",
    "description": "",
    "name": "useSSRSafeId",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/story-helpers.tsx",
    "description": "",
    "name": "getTextInputArgTypes",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/story-helpers.tsx",
    "description": "",
    "name": "getFormControlArgsByChildComponent",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the control allows user input",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "If true, the user must specify a value for the input before the owning form can be submitted",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "When `as` prop is 'label', it may be used to override the `htmlFor` given to the <label> element by FormControl's React Context.\nWhen 'as' prop is 'legend' or 'span', it is used as the `id` for the element.\nCustom ID to override the ID set by FormControl's React Context\nMay be used to override the ID assigned by FormControl's React Context",
        "defaultValue": null
      },
      {
        "name": "htmlFor",
        "type": "string",
        "required": false,
        "description": "The unique identifier for the associated input\nThis prop may be used to override the `htmlFor` set from FormControl's React Context.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "visuallyHidden",
        "type": "boolean",
        "required": false,
        "description": "Whether the label should be visually hidden",
        "defaultValue": "false"
      },
      {
        "name": "requiredText",
        "type": "string",
        "required": false,
        "description": "The text to display when the field is required",
        "defaultValue": "*"
      },
      {
        "name": "requiredIndicator",
        "type": "boolean",
        "required": false,
        "description": "Whether to show or hide the required text in the accessibility tree, the required text is still shown visually.",
        "defaultValue": "true"
      },
      {
        "name": "labelChildren",
        "type": "React.ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "captionChildren",
        "type": "React.ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "FormValidationStatus",
        "required": false,
        "description": "Changes the visual style to match the validation status",
        "defaultValue": null
      },
      {
        "name": "validationChildren",
        "type": "React.ReactNode",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/story-helpers.tsx",
    "description": "",
    "name": "OcticonArgType",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "Render the component (a React.createElement() or JSX expression)\ninto its intermediate object representation with 'type',\n'props', and 'children' keys\n\nThe returned object can be matched with expect().toEqual(), e.g.\n\n```js\nexpect(render(<Foo />)).toEqual(render(<div foo='bar' />))\n```",
    "name": "render",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "Render the component (a React.createElement() or JSX expression)\nusing react-test-renderer and return the root node\n```",
    "name": "renderRoot",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "Get the HTML class names rendered by the component instance\nas an array.\n\n```js\nexpect(renderClasses(<div className='a b' />))\n  .toEqual(['a', 'b'])\n```",
    "name": "renderClasses",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "Returns true if a node renders with a single class.",
    "name": "rendersClass",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "px",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "percent",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "renderStyles",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "getComputedStyles",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "This provides a layer of compatibility between the render() function from\nreact-test-renderer and Enzyme's mount()",
    "name": "getProps",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "getClassName",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "getClasses",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "loadCSS",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "unloadCSS",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/utils/testing.tsx",
    "description": "",
    "name": "behavesAsComponent",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "Component",
        "type": "React.ComponentType<React.PropsWithChildren<any>>",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "toRender",
        "type": "() => React.ReactElement",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "options",
        "type": "Options",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Divider.tsx",
    "description": "Visually separates `Item`s or `Group`s in an `ActionList`.",
    "name": "Divider",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Divider.tsx",
    "description": "Visually separates `Item`s or `Group`s in an `ActionList`.",
    "name": "Divider.renderItem",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Divider.tsx",
    "description": "",
    "name": "StyledDivider",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Group.tsx",
    "description": "Collects related `Items` in an `ActionList`.",
    "name": "Group",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "header",
        "type": "HeaderProps",
        "required": false,
        "description": "Props for a `Header` to render in the `Group`.",
        "defaultValue": null
      },
      {
        "name": "groupId",
        "type": "string",
        "required": false,
        "description": "The id of the group.",
        "defaultValue": null
      },
      {
        "name": "items",
        "type": "Element[]",
        "required": false,
        "description": "`Items` to render in the `Group`.",
        "defaultValue": null
      },
      {
        "name": "showItemDividers",
        "type": "boolean",
        "required": false,
        "description": "Whether to display a divider above each `Item` in this `Group` when it does not follow a `Header` or `Divider`.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Header.tsx",
    "description": "Displays the name and description of a `Group`.",
    "name": "Header",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "variant",
        "type": "\"subtle\" | \"filled\"",
        "required": false,
        "description": "Style variations. Usage is discretionary.\n\n- `\"filled\"` - Superimposed on a background, offset from nearby content\n- `\"subtle\"` - Relatively less offset from nearby content",
        "defaultValue": "subtle"
      },
      {
        "name": "title",
        "type": "string",
        "required": true,
        "description": "Primary text which names a `Group`.",
        "defaultValue": null
      },
      {
        "name": "auxiliaryText",
        "type": "string",
        "required": false,
        "description": "Secondary text which provides additional information about a `Group`.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Header.tsx",
    "description": "",
    "name": "StyledHeader",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"subtle\" | \"filled\"",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/Item.tsx",
    "description": "",
    "name": "ActionList.Item",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "dangerouslySetInnerHtml",
        "type": "React.DOMAttributes<HTMLDivElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/ActionList/List.tsx",
    "description": "Lists `Item`s, either grouped or ungrouped, with a `Divider` between each `Group`.",
    "name": "ActionList",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "groupMetadata",
        "type": "((Omit<GroupProps, \"items\"> | Omit<Partial<GroupProps> & { renderItem?: RenderItemFn; renderGroup?: ({ header, items, ...props }: GroupProps) => Element; }, \"items\">) & { ...; })[]",
        "required": true,
        "description": "A collection of `Group` props (except `items`), plus a unique group identifier\nand `Group`-level custom `Item` or `Group` renderers.",
        "defaultValue": null
      },
      {
        "name": "items",
        "type": "ItemInput[] | ((ItemProps | (Partial<ItemProps> & { renderItem: RenderItemFn; })) & { groupId: string; })[]",
        "required": true,
        "description": "A collection of `Item` props, plus associated group identifiers\nand `Item`-level custom `Item` renderers.\nA collection of `Item` props and `Item`-level custom `Item` renderers.",
        "defaultValue": null
      },
      {
        "name": "role",
        "type": "AriaRole",
        "required": false,
        "description": "The ARIA role describing the function of `List` component. `listbox` is a common value.",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "id to attach to the base DOM node of the list",
        "defaultValue": null
      },
      {
        "name": "renderItem",
        "type": "RenderItemFn",
        "required": false,
        "description": "A `List`-level custom `Item` renderer. Every `Item` within this `List`\nwithout a `Group`-level or `Item`-level custom `Item` renderer will be\nrendered using this function component.",
        "defaultValue": null
      },
      {
        "name": "renderGroup",
        "type": "({ header, items, ...props }: GroupProps) => Element",
        "required": false,
        "description": "A `List`-level custom `Group` renderer. Every `Group` within this `List`\nwithout a `Group`-level custom `Item` renderer will be rendered using\nthis function component.",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"inset\" | \"full\"",
        "required": false,
        "description": "Style variations. Usage is discretionary.\n\n- `\"inset\"` - `List` children are offset (vertically and horizontally) from `List`’s edges\n- `\"full\"` - `List` children are flush (vertically and horizontally) with `List` edges",
        "defaultValue": null
      },
      {
        "name": "selectionVariant",
        "type": "\"multiple\" | \"single\"",
        "required": false,
        "description": "For `Item`s which can be selected, whether `multiple` `Item`s or a `single` `Item` can be selected",
        "defaultValue": null
      },
      {
        "name": "showItemDividers",
        "type": "boolean",
        "required": false,
        "description": "Whether to display a divider above each `Item` in this `List` when it does not follow a `Header` or `Divider`.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/Button.tsx",
    "description": "",
    "name": "Button",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonBase.tsx",
    "description": "",
    "name": "ButtonBase",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "",
        "defaultValue": "medium"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonClose.tsx",
    "description": "",
    "name": "ButtonClose",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonDanger.tsx",
    "description": "",
    "name": "ButtonDanger",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonInvisible.tsx",
    "description": "",
    "name": "ButtonInvisible",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonOutline.tsx",
    "description": "",
    "name": "ButtonOutline",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonPrimary.tsx",
    "description": "",
    "name": "ButtonPrimary",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "undefined",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"small\" | \"large\" | \"medium\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/Button/ButtonTableList.tsx",
    "description": "",
    "name": "ButtonTableList",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/FilterList/FilterList.tsx",
    "id": "filter_list",
    "description": "",
    "name": "FilterList",
    "status": "deprecated",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/FilterList/FilterList.tsx",
        "description": "An item that activates a filter when activated.",
        "name": "FilterList.Item",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "count",
            "type": "number",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "small",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "selected",
            "type": "boolean",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/FilteredSearch/FilteredSearch.tsx",
    "id": "filtered_search",
    "description": "",
    "name": "FilteredSearch",
    "status": "deprecated",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/UnderlineNav/UnderlineNav.tsx",
    "id": "legacy_underline_nav",
    "description": "The underline nav is used to display navigation in a horizontal tabbed format.",
    "name": "UnderlineNav",
    "status": "deprecated",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "actions",
        "type": "React.ReactNode",
        "required": false,
        "description": "Place another element, such as a button, to the opposite side of the navigation items.",
        "defaultValue": null
      },
      {
        "name": "align",
        "type": "\"right\"",
        "required": false,
        "description": "Use `right` to have navigation items aligned right.",
        "defaultValue": null
      },
      {
        "name": "full",
        "type": "boolean",
        "required": false,
        "description": "Used to make navigation fill the width of the container.",
        "defaultValue": null
      },
      {
        "name": "label",
        "type": "string",
        "required": false,
        "description": "Used to set the `aria-label` on the top level `<nav>` element.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/UnderlineNav/UnderlineNav.tsx",
        "description": "Links in the UnderlineNav",
        "name": "UnderlineNav.Link",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "to",
            "type": "To",
            "required": false,
            "description": "Used when the link is rendered using a component like React Router's `Link`. The path to navigate to.",
            "defaultValue": null
          },
          {
            "name": "selected",
            "type": "boolean",
            "required": false,
            "description": "Whether this child represents the current page",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/deprecated/utils/create-slots.tsx",
    "description": "",
    "name": "createslots",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/InlineAutocomplete/InlineAutocomplete.tsx",
    "id": "drafts_inline_autocomplete",
    "description": "Shows suggestions to complete the current word/phrase the user is actively typing.",
    "name": "InlineAutocomplete",
    "status": "deprecated",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "triggers",
        "type": "Trigger[]",
        "required": true,
        "description": "Register the triggers that can cause suggestions to appear.",
        "defaultValue": null
      },
      {
        "name": "onShowSuggestions",
        "type": "(event: ShowSuggestionsEvent) => void",
        "required": true,
        "description": "Called when a valid suggestion query is updated. This should be handled by setting the\n`suggestions` prop accordingly.",
        "defaultValue": null
      },
      {
        "name": "onSelectSuggestion",
        "type": "(event: SelectSuggestionsEvent) => void",
        "required": false,
        "description": "Called when a suggestion is selected.\n@note This should be used only for performing side effects, not for modifying\nthe inserted text. Do not call `setState` in this handler or the user's cursor\nposition / undo history could be lost.",
        "defaultValue": null
      },
      {
        "name": "onHideSuggestions",
        "type": "() => void",
        "required": true,
        "description": "Called when suggestions should be hidden. Set `suggestions` to `null` in this case.",
        "defaultValue": null
      },
      {
        "name": "suggestions",
        "type": "Suggestions",
        "required": true,
        "description": "The currently visible list of suggestions. If `loading`, a loading indicator will be\nshown. If `null` or empty, the list will be hidden. Suggestion sort will be preserved.\n\nTypically, this should not contain more than five or so suggestions.",
        "defaultValue": null
      },
      {
        "name": "tabInsertsSuggestions",
        "type": "boolean",
        "required": false,
        "description": "If `true`, suggestions will be applied with both `Tab` and `Enter`, instead of just\n`Enter`. This may be expected behavior for users used to IDEs, but use caution when\nhijacking browser tabbing capability.",
        "defaultValue": false
      },
      {
        "name": "sx",
        "type": "Omit<BetterSystemStyleObject, \"position\">",
        "required": false,
        "description": "The `AutocompleteTextarea` has a container for positioning the suggestions overlay.\nThis can break some layouts (ie, if the editor must expand with `flex: 1` to fill space)\nso you can override container styles here. Usually this should not be necessary.\n`position` may not be overriden.",
        "defaultValue": null
      },
      {
        "name": "children",
        "type": "ReactElement<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>, string | JSXElementConstructor<...>> & RefAttributes<...> & ReactNode",
        "required": false,
        "description": "An `input` or `textarea` compatible component to extend. A compatible component is any\ncomponent that forwards a ref and props to an underlying `input` or `textarea` element,\nincluding but not limited to `Input`, `TextArea`, `input`, `textarea`, `styled.input`,\nand `styled.textarea`. If the child is not compatible, a runtime `TypeError` will be\nthrown.",
        "defaultValue": null
      },
      {
        "name": "suggestionsPlacement",
        "type": "SuggestionsPlacement",
        "required": false,
        "description": "Control which side of the insertion point the suggestions list appears on by default. This\nshould almost always be `\"below\"` because it typically provides a better user experience\n(the most-relevant suggestions will appear closest to the text). However, if the input\nis always near the bottom of the screen (ie, a chat composition form), it may be better to\ndisplay the suggestions above the input.\n\nIn either case, if there is not enough room to display the suggestions in the default direction,\nthe suggestions will appear in the other direction.",
        "defaultValue": "below"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/InlineAutocomplete/_AutocompleteSuggestions.tsx",
    "description": "Renders an overlayed list at the given relative coordinates. Handles keyboard navigation\nand accessibility concerns.",
    "name": "SuggestionList",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "suggestions",
        "type": "Suggestions",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "portalName",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "triggerCharCoords",
        "type": "CharacterCoordinates",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onClose",
        "type": "() => void",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onCommit",
        "type": "(suggestion: string) => void",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "inputRef",
        "type": "React.RefObject<TextInputElement>",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "visible",
        "type": "boolean",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "tabInsertsSuggestions",
        "type": "boolean",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "defaultPlacement",
        "type": "SuggestionsPlacement",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/Footer.tsx",
    "description": "",
    "name": "MarkdownEditor.Footer",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "children",
        "type": "React.ReactNode",
        "required": true,
        "description": "Children to render in the footer",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/MarkdownEditor.tsx",
    "id": "drafts_markdown_editor",
    "description": "Markdown textarea with controls & keyboard shortcuts.",
    "name": "MarkdownEditor",
    "status": "deprecated",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "value",
        "type": "string",
        "required": true,
        "description": "Current value of the editor as a multiline markdown string.",
        "defaultValue": null
      },
      {
        "name": "onChange",
        "type": "(newMarkdown: string) => void",
        "required": true,
        "description": "Called when the value changes.",
        "defaultValue": null
      },
      {
        "name": "onRenderPreview",
        "type": "(markdown: string) => Promise<string>",
        "required": true,
        "description": "Accepts Markdown and returns rendered HTML. To prevent XSS attacks,\nthe HTML should be sanitized and/or come from a trusted source.",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Disable the editor and all related buttons. Users can still switch between preview & edit modes.",
        "defaultValue": false
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": "Placeholder text to show when the editor is empty. By default, no placeholder will be shown.",
        "defaultValue": null
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": "Maximum number of characters the markdown can hold (includes formatting characters like `*`).",
        "defaultValue": null
      },
      {
        "name": "fullHeight",
        "type": "boolean",
        "required": false,
        "description": "Force the editor to take up the full height of the container and disallow resizing. Only\nuse when the container height is tall enough that the user will never want to expand the\ninput further, ie when it takes the full height of the viewport.",
        "defaultValue": null
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "required": false,
        "description": "ID of the describing element.",
        "defaultValue": null
      },
      {
        "name": "viewMode",
        "type": "MarkdownViewMode",
        "required": false,
        "description": "Optionally control the view mode. If uncontrolled, leave this `undefined`.",
        "defaultValue": null
      },
      {
        "name": "onChangeViewMode",
        "type": "(newViewMode: MarkdownViewMode) => void",
        "required": false,
        "description": "If `viewMode` is controlled, this will be called on change.",
        "defaultValue": null
      },
      {
        "name": "onPrimaryAction",
        "type": "() => void",
        "required": false,
        "description": "Called when the user presses `Ctrl`/`Cmd` + `Enter`. Should almost always be wired to\nthe same event as clicking the primary `actionButton`.",
        "defaultValue": null
      },
      {
        "name": "minHeightLines",
        "type": "number",
        "required": false,
        "description": "Minimum number of visible lines of text in the editor.",
        "defaultValue": 5
      },
      {
        "name": "maxHeightLines",
        "type": "number",
        "required": false,
        "description": "Maximum number of visible lines of text in the editor. Has no effect if `fullHeight = true`.",
        "defaultValue": 35
      },
      {
        "name": "emojiSuggestions",
        "type": "SuggestionOptions<Emoji>",
        "required": false,
        "description": "Array of all possible emojis to suggest. Leave `undefined` to disable emoji autocomplete.\nFor lazy-loading suggestions, an async function can be provided instead.",
        "defaultValue": null
      },
      {
        "name": "mentionSuggestions",
        "type": "SuggestionOptions<Mentionable>",
        "required": false,
        "description": "Array of all possible mention suggestions. Leave `undefined` to disable `@`-mention autocomplete.\nFor lazy-loading suggestions, an async function can be provided instead.",
        "defaultValue": null
      },
      {
        "name": "referenceSuggestions",
        "type": "SuggestionOptions<Reference>",
        "required": false,
        "description": "Array of all possible references to suggest. Leave `undefined` to disable `#`-reference autocomplete.\nFor lazy-loading suggestions, an async function can be provided instead.",
        "defaultValue": null
      },
      {
        "name": "onUploadFile",
        "type": "(file: File) => Promise<FileUploadResult>",
        "required": false,
        "description": "Uploads a file to a hosting service and returns the URL. If not provided, file uploads\nwill be disabled.",
        "defaultValue": null
      },
      {
        "name": "acceptedFileTypes",
        "type": "FileType[]",
        "required": false,
        "description": "Array of allowed file types. If `onUploadFile` is defined but this array is not, all\nfile types will be accepted. You can still reject file types by rejecting the `onUploadFile`\npromise, but setting this array provides a better user experience by preventing the\nupload in the first place.",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": false,
        "description": "Control whether the editor font is monospace.",
        "defaultValue": false
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "Control whether the input is required.",
        "defaultValue": false
      },
      {
        "name": "name",
        "type": "string",
        "required": false,
        "description": "The name that will be given to the `textarea`.",
        "defaultValue": null
      },
      {
        "name": "savedReplies",
        "type": "SavedReply[]",
        "required": false,
        "description": "To enable the saved replies feature, provide an array of replies.",
        "defaultValue": null
      },
      {
        "name": "pasteUrlsAsPlainText",
        "type": "boolean",
        "required": false,
        "description": "Control whether URLs are pasted as plain text instead of as formatted links (if the\nuser has selected some text before pasting). Defaults to `false` (URLs will paste as\nlinks). This should typically be controlled by user settings.\n\nUsers can always toggle this behavior by holding `shift` when pasting.",
        "defaultValue": false
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/Actions.tsx",
        "description": "",
        "name": "MarkdownEditor.Actions",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "children",
            "type": "React.ReactNode",
            "required": false,
            "description": "Markdown editor actions",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/Label.tsx",
        "description": "",
        "name": "MarkdownEditor.Label",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "visuallyHidden",
            "type": "boolean",
            "required": false,
            "description": "Whether the label is visually hidden",
            "defaultValue": null
          },
          {
            "name": "children",
            "type": "React.ReactNode",
            "required": false,
            "description": "Label content",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/Toolbar.tsx",
        "description": "",
        "name": "MarkdownEditor.DefaultToolbarButtons",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/_ToolbarButton.tsx",
        "description": "",
        "name": "MarkdownEditor.ToolbarButton",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-label",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "aria-labelledby",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "React.ElementType",
            "required": true,
            "description": "Provide an octicon. It will be placed in the center of the button",
            "defaultValue": null
          },
          {
            "name": "unsafeDisableTooltip",
            "type": "boolean",
            "required": false,
            "description": "Do not use. This is planned to be a temporary prop until the default tooltip on icon buttons are fully rolled out.",
            "defaultValue": null
          },
          {
            "name": "description",
            "type": "string",
            "required": false,
            "description": "If `description` is provided, we will use a Tooltip to describe the button. Then `aria-label` is used to label the button.",
            "defaultValue": null
          },
          {
            "name": "tooltipDirection",
            "type": "TooltipDirection",
            "required": false,
            "description": "Sets where the tooltip renders in relation to the target.",
            "defaultValue": null
          },
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "Items that are disabled can not be clicked, selected, or navigated through.",
            "defaultValue": null
          },
          {
            "name": "size",
            "type": "Size",
            "required": false,
            "description": "Size of button and fontSize of text in button",
            "defaultValue": null
          },
          {
            "name": "block",
            "type": "boolean",
            "required": false,
            "description": "Allow button width to fill its container.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "variant",
            "type": "VariantType",
            "required": false,
            "description": "Determine's the styles on a button one of 'default' | 'primary' | 'invisible' | 'danger'",
            "defaultValue": null
          },
          {
            "name": "inactive",
            "type": "boolean",
            "required": false,
            "description": "Whether the button looks visually disabled, but can still accept all the same\ninteractions as an enabled button.",
            "defaultValue": null
          },
          {
            "name": "labelWrap",
            "type": "boolean",
            "required": false,
            "description": "Whether the button label should wrap to multiple lines of it is longer than the button width.",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/_ErrorMessage.tsx",
    "description": "",
    "name": "ErrorMessage",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "message",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/_FormattingTools.tsx",
    "description": "Renders an invisible `markdown-toolbar-element` that provides formatting actions to the\neditor. This is a hacky way of using the library, but it allows us to use the built-in\nbehavior without having to actually display the inflexible toolbar element. It also means\nwe can still use the formatting tools even if the consumer hides the default toolbar\nbuttons (ie, by keyboard shortcut).",
    "name": "FormattingTools",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "forInputId",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/_MarkdownInput.tsx",
    "description": "",
    "name": "MarkdownInput",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "value",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onChange",
        "type": "React.ChangeEventHandler<HTMLTextAreaElement>",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onKeyDown",
        "type": "React.KeyboardEventHandler<HTMLTextAreaElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Apply inactive visual appearance to the Textarea",
        "defaultValue": null
      },
      {
        "name": "placeholder",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "maxLength",
        "type": "number",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "fullHeight",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "isDraggedOver",
        "type": "boolean",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "emojiSuggestions",
        "type": "SuggestionOptions<Emoji>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "mentionSuggestions",
        "type": "SuggestionOptions<Mentionable>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "referenceSuggestions",
        "type": "SuggestionOptions<Reference>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "minHeightLines",
        "type": "number",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "maxHeightLines",
        "type": "number",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "pasteUrlsAsPlainText",
        "type": "boolean",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "visible",
        "type": "boolean",
        "required": true,
        "description": "Use this prop to control visibility instead of unmounting, so the undo stack and custom height are preserved.",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Expands with width of the component to fill the parent elements",
        "defaultValue": null
      },
      {
        "name": "resize",
        "type": "\"vertical\" | \"none\" | \"both\" | \"horizontal\"",
        "required": false,
        "description": "Allows resizing of the textarea",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "apply a high contrast color to background",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "Indicates whether the Textarea validation state",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/_ViewSwitch.tsx",
    "description": "",
    "name": "ViewSwitch",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "selectedView",
        "type": "MarkdownViewMode",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onViewSelect",
        "type": "(view: MarkdownViewMode) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onLoadPreview",
        "type": "() => void",
        "required": true,
        "description": "Called when the preview should be loaded.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownViewer/MarkdownViewer.tsx",
    "id": "drafts_markdown_viewer",
    "description": "",
    "name": "MarkdownViewer",
    "status": "deprecated",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "loading",
        "type": "boolean",
        "required": false,
        "description": "Show a loading spinner instead of content.",
        "defaultValue": false
      },
      {
        "name": "dangerousRenderedHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "required": true,
        "description": "Set the rendered HTML of the viewer. To prevent XSS, ensure that the source of this\nHTML is trusted!",
        "defaultValue": null
      },
      {
        "name": "onLinkClick",
        "type": "(event: MouseEvent) => void",
        "required": false,
        "description": "Called when the user clicks a link element. This can be used to intercept the click\nand provide custom routing. Note that this is a native HTML `MouseEvent` and not a\n`React.ClickEvent`.",
        "defaultValue": null
      },
      {
        "name": "openLinksInNewTab",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": false
      },
      {
        "name": "markdownValue",
        "type": "string",
        "required": false,
        "description": "The markdown the HTML was rendered from. This is not used for viewing, only as a source\nfor change events.",
        "defaultValue": ""
      },
      {
        "name": "onChange",
        "type": "(markdown: string) => void | Promise<void>",
        "required": false,
        "description": "Called when the user interacts and updates the Markdown. The rendered Markdown is\nupdated eagerly - if the request fails, a rejected Promise should be returned by\nthis handler. In that case, the viewer will revert the visual change.\n\nIf the change is handled by an async API request (as it typically will be in production\ncode), the viewer should be `disabled` while the request is pending to avoid conflicts.\nTo allow users to check multiple boxes rapidly, the API request should be debounced (an\nideal debounce duration is about 1 second).",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Control whether interaction is disabled.",
        "defaultValue": false
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
    "id": "select_panel_v2",
    "description": "Select panel is a semantic dialog that allows for complex selection options within an overlay.",
    "docsId": "select_panel",
    "name": "Panel",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "title",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "description",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"anchored\" | \"modal\" | ResponsiveValue<\"anchored\" | \"modal\", \"full-screen\" | \"bottom-sheet\">",
        "required": false,
        "description": "",
        "defaultValue": "warning"
      },
      {
        "name": "selectionVariant",
        "type": "any",
        "required": false,
        "description": "",
        "defaultValue": "multiple"
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": false
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "anchorRef",
        "type": "React.RefObject<HTMLButtonElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onCancel",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onClearSelection",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onSubmit",
        "type": "(event?: React.FormEvent<HTMLFormElement>) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "\"small\" | \"large\" | \"medium\" | \"auto\" | \"xlarge\" | \"xxlarge\"",
        "required": false,
        "description": "",
        "defaultValue": "medium"
      },
      {
        "name": "height",
        "type": "\"fit-content\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "maxHeight",
        "type": "\"small\" | \"large\" | \"medium\" | \"fit-content\" | \"xlarge\"",
        "required": false,
        "description": "",
        "defaultValue": "large"
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "The button that toggles the SelectPanel.",
        "name": "SelectPanel.Button",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "alignContent",
            "type": "AlignContent",
            "required": false,
            "description": "Content alignment for when visuals are present",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "any",
            "required": false,
            "description": "The icon for the IconButton",
            "defaultValue": null
          },
          {
            "name": "leadingVisual",
            "type": "any",
            "required": false,
            "description": "The leading visual which comes before the button content",
            "defaultValue": null
          },
          {
            "name": "trailingVisual",
            "type": "any",
            "required": false,
            "description": "The trailing visual which comes after the button content",
            "defaultValue": null
          },
          {
            "name": "trailingAction",
            "type": "any",
            "required": false,
            "description": "Trailing action appears to the right of the trailing visual and is always locked to the end",
            "defaultValue": null
          },
          {
            "name": "count",
            "type": "number",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "variant",
            "type": "VariantType",
            "required": false,
            "description": "Determine's the styles on a button one of 'default' | 'primary' | 'invisible' | 'danger'",
            "defaultValue": "warning"
          },
          {
            "name": "size",
            "type": "Size",
            "required": false,
            "description": "Size of button and fontSize of text in button",
            "defaultValue": "variant === 'empty' ? 'full' : 'inline'"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "Items that are disabled can not be clicked, selected, or navigated through.",
            "defaultValue": null
          },
          {
            "name": "block",
            "type": "boolean",
            "required": false,
            "description": "Allow button width to fill its container.",
            "defaultValue": null
          },
          {
            "name": "inactive",
            "type": "boolean",
            "required": false,
            "description": "Whether the button looks visually disabled, but can still accept all the same\ninteractions as an enabled button.",
            "defaultValue": null
          },
          {
            "name": "labelWrap",
            "type": "boolean",
            "required": false,
            "description": "Whether the button label should wrap to multiple lines of it is longer than the button width.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "The header area of the SelectPanel.",
        "name": "SelectPanel.Header",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "The search/filter input at the top of the SelectPanel.",
        "name": "SelectPanel.SearchInput",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "icon",
            "type": "React.ElementType",
            "required": false,
            "description": "@deprecated Use `leadingVisual` or `trailingVisual` prop instead",
            "defaultValue": null
          },
          {
            "name": "loading",
            "type": "boolean",
            "required": false,
            "description": "Whether the to show a loading indicator in the input",
            "defaultValue": null
          },
          {
            "name": "loaderPosition",
            "type": "\"auto\" | \"leading\" | \"trailing\"",
            "required": false,
            "description": "Which position to render the loading indicator\n'auto' (default): at the end of the input, unless a `leadingVisual` is passed. Then, it will render at the beginning\n'leading': at the beginning of the input\n'trailing': at the end of the input",
            "defaultValue": null
          },
          {
            "name": "leadingVisual",
            "type": "any",
            "required": false,
            "description": "A visual that renders inside the input before the typing area",
            "defaultValue": null
          },
          {
            "name": "trailingVisual",
            "type": "any",
            "required": false,
            "description": "A visual that renders inside the input after the typing area",
            "defaultValue": null
          },
          {
            "name": "trailingAction",
            "type": "React.ReactElement<React.HTMLProps<HTMLButtonElement>>",
            "required": false,
            "description": "A visual that renders inside the input after the typing area",
            "defaultValue": null
          },
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "Whether the input is styled to look disabled.",
            "defaultValue": null
          },
          {
            "name": "size",
            "type": "TextInputSizes",
            "required": false,
            "description": "The size of the input.",
            "defaultValue": "variant === 'empty' ? 'full' : 'inline'"
          },
          {
            "name": "block",
            "type": "boolean",
            "required": false,
            "description": "Whether the input takes up the full width of its parent",
            "defaultValue": null
          },
          {
            "name": "monospace",
            "type": "boolean",
            "required": false,
            "description": "Whether the text rendered in the input is in a monospace font.",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "variant",
            "type": "TextInputSizes",
            "required": false,
            "description": "@deprecated Use `size` prop instead",
            "defaultValue": "warning"
          },
          {
            "name": "contrast",
            "type": "boolean",
            "required": false,
            "description": "Whether the background color of the input has contrast against the default background color.",
            "defaultValue": null
          },
          {
            "name": "validationStatus",
            "type": "FormValidationStatus",
            "required": false,
            "description": "The result of validation on the input.",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "The footer area of the SelectPanel.",
        "name": "SelectPanel.Footer",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "The secondary action in the footer area of the SelectPanel. Often a \"cancel\" action.",
        "name": "SelectPanel.SecondaryAction",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "variant",
            "type": "\"button\" | \"link\" | \"checkbox\"",
            "required": false,
            "description": "",
            "defaultValue": "warning"
          },
          {
            "name": "id",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "disabled",
            "type": "boolean",
            "required": false,
            "description": "Items that are disabled can not be clicked, selected, or navigated through.\nApply inactive visual appearance to the checkbox",
            "defaultValue": null
          },
          {
            "name": "value",
            "type": "string | number | readonly string[] | (string & readonly string[])",
            "required": false,
            "description": "A unique value that is never shown to the user.\nUsed during form submission and to identify which checkbox inputs are selected",
            "defaultValue": null
          },
          {
            "name": "size",
            "type": "number | Size",
            "required": false,
            "description": "Size of button and fontSize of text in button",
            "defaultValue": "variant === 'empty' ? 'full' : 'inline'"
          },
          {
            "name": "block",
            "type": "boolean",
            "required": false,
            "description": "Allow button width to fill its container.",
            "defaultValue": null
          },
          {
            "name": "alignContent",
            "type": "AlignContent",
            "required": false,
            "description": "Content alignment for when visuals are present",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "any",
            "required": false,
            "description": "The icon for the IconButton",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          },
          {
            "name": "inactive",
            "type": "boolean",
            "required": false,
            "description": "Whether the button looks visually disabled, but can still accept all the same\ninteractions as an enabled button.",
            "defaultValue": null
          },
          {
            "name": "labelWrap",
            "type": "boolean",
            "required": false,
            "description": "Whether the button label should wrap to multiple lines of it is longer than the button width.",
            "defaultValue": null
          },
          {
            "name": "leadingVisual",
            "type": "any",
            "required": false,
            "description": "The leading visual which comes before the button content",
            "defaultValue": null
          },
          {
            "name": "trailingVisual",
            "type": "any",
            "required": false,
            "description": "The trailing visual which comes after the button content",
            "defaultValue": null
          },
          {
            "name": "trailingAction",
            "type": "any",
            "required": false,
            "description": "Trailing action appears to the right of the trailing visual and is always locked to the end",
            "defaultValue": null
          },
          {
            "name": "count",
            "type": "number",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "ref",
            "type": "any",
            "required": false,
            "description": "Forward a ref to the underlying input element",
            "defaultValue": null
          },
          {
            "name": "hoverColor",
            "type": "string",
            "required": false,
            "description": "Color used when hovering over the link.",
            "defaultValue": null
          },
          {
            "name": "muted",
            "type": "boolean",
            "required": false,
            "description": "Uses a less prominent shade for Link color, and the default link shade on hover.",
            "defaultValue": null
          },
          {
            "name": "underline",
            "type": "boolean",
            "required": false,
            "description": "@deprecated use `inline` to specify the type of link instead",
            "defaultValue": null
          },
          {
            "name": "inline",
            "type": "boolean",
            "required": false,
            "description": "Set to true for links adjacent to text, underlining them for clear visibility and improved accessibility.",
            "defaultValue": null
          },
          {
            "name": "as",
            "type": "\"a\"",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "indeterminate",
            "type": "boolean",
            "required": false,
            "description": "Apply indeterminate visual appearance to the checkbox",
            "defaultValue": null
          },
          {
            "name": "required",
            "type": "boolean",
            "required": false,
            "description": "Indicates whether the checkbox must be checked",
            "defaultValue": null
          },
          {
            "name": "validationStatus",
            "type": "FormValidationStatus",
            "required": false,
            "description": "Only used to inform ARIA attributes. Individual checkboxes do not have validation styles.",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "The loading indicator used when the data for the SelectPanel content is still loading",
        "name": "SelectPanel.Loading",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/SelectPanel.tsx",
        "description": "A message to render in the SelectPanel to indicate some kind of status or error.",
        "name": "SelectPanel.Message",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "size",
            "type": "\"inline\" | \"full\"",
            "required": false,
            "description": "",
            "defaultValue": "variant === 'empty' ? 'full' : 'inline'"
          },
          {
            "name": "title",
            "type": "string",
            "required": false,
            "description": "",
            "defaultValue": null
          },
          {
            "name": "variant",
            "type": "\"error\" | \"warning\" | \"empty\"",
            "required": false,
            "description": "",
            "defaultValue": "warning"
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/SelectPanel2/index.tsx",
    "description": "",
    "name": "SelectPanel",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "title",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "description",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "\"anchored\" | \"modal\" | ResponsiveValue<\"anchored\" | \"modal\", \"full-screen\" | \"bottom-sheet\">",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "selectionVariant",
        "type": "any",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "open",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "anchorRef",
        "type": "React.RefObject<HTMLButtonElement>",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onCancel",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onClearSelection",
        "type": "() => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "onSubmit",
        "type": "(event?: React.FormEvent<HTMLFormElement>) => void",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "\"small\" | \"large\" | \"medium\" | \"auto\" | \"xlarge\" | \"xxlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "height",
        "type": "\"fit-content\"",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "maxHeight",
        "type": "\"small\" | \"large\" | \"medium\" | \"fit-content\" | \"xlarge\"",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/Skeleton/SkeletonAvatar.tsx",
    "id": "skeleton_avatar",
    "description": "Skeleton avatars may be used to improve perceived performance by rendering a rough representation of an avatar in a block of content that is still loading.",
    "name": "SkeletonAvatar",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "number | ResponsiveValue<number>",
        "required": false,
        "description": "Sets the width and height of the avatar.",
        "defaultValue": 20
      },
      {
        "name": "square",
        "type": "boolean",
        "required": false,
        "description": "Sets the shape of the avatar to a square if true. If false, the avatar will be circular.",
        "defaultValue": null
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Class name for custom styling",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/Skeleton/SkeletonBox.tsx",
    "id": "skeleton_box",
    "description": "SkeletonBox is a low-level component used to create a skeleton loading animation.",
    "name": "SkeletonBox",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "height",
        "type": "React.CSSProperties",
        "required": false,
        "description": "Height of the skeleton \"box\". Accepts any valid CSS `height` value.",
        "defaultValue": null
      },
      {
        "name": "width",
        "type": "React.CSSProperties",
        "required": false,
        "description": "Width of the skeleton \"box\". Accepts any valid CSS `width` value.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/Skeleton/SkeletonText.tsx",
    "id": "skeleton_text",
    "description": "SkeletonText is a component that renders a loading state for text content.",
    "name": "SkeletonText",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "size",
        "type": "\"display\" | \"subtitle\" | \"titleLarge\" | \"titleMedium\" | \"titleSmall\" | \"bodyLarge\" | \"bodyMedium\" | \"bodySmall\"",
        "required": false,
        "description": "Size of the text that the skeleton is replacing.",
        "defaultValue": "bodyMedium"
      },
      {
        "name": "lines",
        "type": "number",
        "required": false,
        "description": "Number of lines of skeleton text to render.",
        "defaultValue": 1
      },
      {
        "name": "maxWidth",
        "type": "React.CSSProperties",
        "required": false,
        "description": "Maximum width that the line(s) of skeleton text can take up.  Accepts any valid CSS `max-width` value.",
        "defaultValue": null
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Class name for custom styling",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/TabPanels/TabPanels.tsx",
    "id": "tab_panels",
    "description": "Tab panels let users switch between views in the same context.",
    "name": "TabPanels",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "The id of the tab container, used to generate child ids.",
        "defaultValue": null
      },
      {
        "name": "defaultTabIndex",
        "type": "number",
        "required": false,
        "description": "The 0-based index of the tab that is selected by default when the component is loaded.",
        "defaultValue": null
      },
      {
        "name": "selectedTabIndex",
        "type": "number",
        "required": false,
        "description": "The 0-based index of the tab that is selected.",
        "defaultValue": null
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<TabContainerElement>",
        "required": false,
        "description": "Callback fired when the tab container changes (bubbles, cancelable): fired on `<tab-container>` before a new tab is selected and visibility is updated. `event.tab` is the tab that will be focused and `tab.panel` is the panel that will be shown if the event isn't cancelled.",
        "defaultValue": null
      },
      {
        "name": "onChanged",
        "type": "(event: TabContainerChangeEvent) => void",
        "required": false,
        "description": "Callback fired when the tab container changes (bubbles): fired on `<tab-container>` after a new tab is selected and visibility is updated. `event.tab` is the tab that is now active (and will be focused right after this event) and `event.panel` is the newly visible tab panel.",
        "defaultValue": null
      },
      {
        "name": "aria-label",
        "type": "string",
        "required": false,
        "description": "Used to set the `aria-label` on the `role=\\\"tablist\\\"` element. Either aria-label or aria-labelledby must be provided.",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "Used to set the `aria-labelledby` on the `role=\\\"tablist\\\"` element. Either aria-label or aria-labelledby must be provided.",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/TabPanels/TabPanels.tsx",
        "description": "A tab in the tablist of TabPanel",
        "name": "TabPanels.Tab",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "as",
            "type": "\"symbol\" | \"object\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | \"b\" | \"base\" | \"bdi\" | \"bdo\" | \"big\" | \"blockquote\" | \"body\" | \"br\" | \"button\" | \"canvas\" | ... 162 more ... | FunctionComponent<...>",
            "required": true,
            "description": "",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/TabPanels/TabPanels.tsx",
        "description": "A tabpanel associated with a TabPanels.Tab in TabPanels",
        "name": "TabPanels.Panel",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": []
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/UnderlinePanels/UnderlinePanels.tsx",
    "id": "underline_panels",
    "description": "The underline panels are used to break related content into tabbed panels.",
    "name": "UnderlinePanels",
    "status": "draft",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "children",
        "type": "React.ReactNode",
        "required": true,
        "description": "Tabs (UnderlinePanels.Tab) and panels (UnderlinePanels.Panel) to render",
        "defaultValue": null
      },
      {
        "name": "aria-label",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "Accessible name for the tab list",
        "defaultValue": null
      },
      {
        "name": "aria-labelledby",
        "type": "React.AriaAttributes",
        "required": false,
        "description": "ID of the element containing the name for the tab list",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "Custom string to use when generating the IDs of tabs and `aria-labelledby` for the panels",
        "defaultValue": null
      },
      {
        "name": "loadingCounters",
        "type": "boolean",
        "required": false,
        "description": "Loading state for all counters. It displays loading animation for individual counters until all are resolved. It is needed to prevent multiple layout shift.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": [
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/UnderlinePanels/UnderlinePanels.tsx",
        "description": "A tab in the tablist of UnderlinePanels",
        "name": "UnderlinePanels.Tab",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "aria-selected",
            "type": "boolean",
            "required": false,
            "description": "Whether this is the selected tab",
            "defaultValue": null
          },
          {
            "name": "counter",
            "type": "string | number",
            "required": false,
            "description": "Content of CounterLabel rendered after tab text label",
            "defaultValue": null
          },
          {
            "name": "icon",
            "type": "FC<IconProps>",
            "required": false,
            "description": "Icon rendered before the tab text label",
            "defaultValue": null
          },
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      },
      {
        "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/UnderlinePanels/UnderlinePanels.tsx",
        "description": "A tabpanel associated with a UnderlinePanels.Tab in UnderlinePanels",
        "name": "UnderlinePanels.Panel",
        "a11yReviewed": false,
        "stories": [
          ""
        ],
        "props": [
          {
            "name": "sx",
            "type": "BetterSystemStyleObject",
            "required": false,
            "description": "A style object used to override styles using styled-components",
            "defaultValue": null
          }
        ]
      }
    ]
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/ButtonReset.tsx",
    "description": "Provides an unstyled button that can be styled as-needed for components",
    "name": "Button",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/ConditionalWrapper.tsx",
    "description": "",
    "name": "ConditionalWrapper",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "if",
        "type": "boolean",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/InputCaption.tsx",
    "description": "",
    "name": "InputCaption",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "The unique identifier used to associate the caption with an input",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input associated with this caption is disabled",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/InputLabel.tsx",
    "description": "",
    "name": "InputLabel",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "requiredText",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "requiredIndicator",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "visuallyHidden",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "htmlFor",
        "type": "string",
        "required": false,
        "description": "The unique identifier for the associated input",
        "defaultValue": null
      },
      {
        "name": "as",
        "type": "\"label\" | \"legend\" | \"span\"",
        "required": false,
        "description": "The label element can be changed to a 'legend' when it's being used to label a fieldset, or a 'span' when it's being used to label an element that is not a form input. For example: when using a FormControl to render a labeled SegementedControl, the label should be a 'span'",
        "defaultValue": "label"
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/InputValidation.tsx",
    "description": "",
    "name": "InputValidation",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/LiveRegion.tsx",
    "description": "",
    "name": "LiveRegion",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/LiveRegion.tsx",
    "description": "",
    "name": "Message",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "value",
        "type": "string",
        "required": true,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/ScrollableRegion.tsx",
    "description": "",
    "name": "ScrollableRegion",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "The ID of the element that labels the region",
        "defaultValue": null
      },
      {
        "name": "className",
        "type": "string",
        "required": false,
        "description": "Accepts class names for custom styling",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/TextInputInnerVisualSlot.tsx",
    "description": "",
    "name": "TextInputInnerVisualSlot",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "hasLoadingIndicator",
        "type": "boolean",
        "required": true,
        "description": "Whether the input is expected to ever show a loading indicator",
        "defaultValue": null
      },
      {
        "name": "showLoadingIndicator",
        "type": "boolean",
        "required": true,
        "description": "Whether the to show the loading indicator",
        "defaultValue": null
      },
      {
        "name": "visualPosition",
        "type": "\"leading\" | \"trailing\"",
        "required": true,
        "description": "Which side of this visual is being rendered",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/TextInputWrapper.tsx",
    "description": "",
    "name": "TextInputBaseWrapper",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is styled to look disabled.",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Whether the input takes up the full width of its parent",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": false,
        "description": "Whether the text rendered in the input is in a monospace font.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "Whether the background color of the input has contrast against the default background color.",
        "defaultValue": null
      },
      {
        "name": "hasTrailingAction",
        "type": "boolean",
        "required": false,
        "description": "Whether the input has a trailing action.",
        "defaultValue": null
      },
      {
        "name": "isInputFocused",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is focused.",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "The result of validation on the input.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/TextInputWrapper.tsx",
    "description": "",
    "name": "TextInputWrapper",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is styled to look disabled.",
        "defaultValue": null
      },
      {
        "name": "size",
        "type": "TextInputSizes",
        "required": false,
        "description": "The size of the input.",
        "defaultValue": null
      },
      {
        "name": "block",
        "type": "boolean",
        "required": false,
        "description": "Whether the input takes up the full width of its parent",
        "defaultValue": null
      },
      {
        "name": "monospace",
        "type": "boolean",
        "required": false,
        "description": "Whether the text rendered in the input is in a monospace font.",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      },
      {
        "name": "variant",
        "type": "TextInputSizes",
        "required": false,
        "description": "@deprecated Use `size` prop instead",
        "defaultValue": null
      },
      {
        "name": "hasLeadingVisual",
        "type": "boolean",
        "required": false,
        "description": "Whether the input has a leading visual.",
        "defaultValue": null
      },
      {
        "name": "hasTrailingVisual",
        "type": "boolean",
        "required": false,
        "description": "Whether the input has a trailing visual.",
        "defaultValue": null
      },
      {
        "name": "contrast",
        "type": "boolean",
        "required": false,
        "description": "Whether the background color of the input has contrast against the default background color.",
        "defaultValue": null
      },
      {
        "name": "hasTrailingAction",
        "type": "boolean",
        "required": false,
        "description": "Whether the input has a trailing action.",
        "defaultValue": null
      },
      {
        "name": "isInputFocused",
        "type": "boolean",
        "required": false,
        "description": "Whether the input is focused.",
        "defaultValue": null
      },
      {
        "name": "validationStatus",
        "type": "FormValidationStatus",
        "required": false,
        "description": "The result of validation on the input.",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/UnderlineTabbedInterface.tsx",
    "description": "",
    "name": "StyledUnderlineWrapper",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/UnderlineTabbedInterface.tsx",
    "description": "",
    "name": "StyledUnderlineItemList",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/UnderlineTabbedInterface.tsx",
    "description": "",
    "name": "StyledUnderlineItem",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/UnderlineTabbedInterface.tsx",
    "description": "",
    "name": "LoadingCounter",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/UnderlineTabbedInterface.tsx",
    "description": "",
    "name": "UnderlineItem",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "as",
        "type": "any",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/UnstyledTextInput.tsx",
    "description": "",
    "name": "UnstyledTextInput",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/ValidationAnimationContainer.tsx",
    "description": "",
    "name": "ValidationAnimationContainer",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "show",
        "type": "boolean",
        "required": false,
        "description": "",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/VisuallyHidden.tsx",
    "description": "Provides a component that implements the \"visually hidden\" technique. This is\nanalagous to the common `sr-only` class. Children that are rendered inside\nthis component will not be visible but will be available to screen readers.\n\nNote: if this component, or a descendant, has focus then this component will\nno longer be visually hidden.",
    "name": "VisuallyHidden",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/suggestions/_useEmojiSuggestions.tsx",
    "description": "",
    "name": "useEmojiSuggestions",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/suggestions/_useMentionSuggestions.tsx",
    "description": "",
    "name": "useMentionSuggestions",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/drafts/MarkdownEditor/suggestions/_useReferenceSuggestions.tsx",
    "description": "",
    "name": "useReferenceSuggestions",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroup.tsx",
    "description": "",
    "name": "CheckboxOrRadioGroup",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "aria-labelledby",
        "type": "string",
        "required": false,
        "description": "Used when associating the input group with a label other than `CheckboxOrRadioGroup.Label`",
        "defaultValue": null
      },
      {
        "name": "disabled",
        "type": "boolean",
        "required": false,
        "description": "Whether the input group allows user input",
        "defaultValue": false
      },
      {
        "name": "id",
        "type": "string",
        "required": false,
        "description": "The unique identifier for this input group. Used to associate the label, validation text, and caption text.\nYou may want a custom ID to make it easier to select elements in integration tests.",
        "defaultValue": null
      },
      {
        "name": "required",
        "type": "boolean",
        "required": false,
        "description": "If true, the user must make a selection before the owning form can be submitted",
        "defaultValue": false
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupCaption.tsx",
    "description": "",
    "name": "CheckboxOrRadioGroupCaption",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupLabel.tsx",
    "description": "",
    "name": "CheckboxOrRadioGroupLabel",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "visuallyHidden",
        "type": "boolean",
        "required": false,
        "description": "Whether to visually hide the fieldset legend",
        "defaultValue": false
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  },
  {
    "filePath": "/Users/mperrotti/work-dir/react/packages/react/src/internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupValidation.tsx",
    "description": "",
    "name": "CheckboxOrRadioGroupValidation",
    "a11yReviewed": false,
    "stories": [
      ""
    ],
    "props": [
      {
        "name": "variant",
        "type": "FormValidationStatus",
        "required": true,
        "description": "Changes the visual style to match the validation status",
        "defaultValue": null
      },
      {
        "name": "sx",
        "type": "BetterSystemStyleObject",
        "required": false,
        "description": "A style object used to override styles using styled-components",
        "defaultValue": null
      }
    ],
    "subcomponents": []
  }
]